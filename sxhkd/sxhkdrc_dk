######################################################################
# THIS FILE IS THE DK WINDOWS, DESKTOP, MONITORS & LAYOUTS SHORTCUTS #
######################################################################
# Reload dk config, reload rules, quit dk.
ctrl + alt + {r,q}
    { \
    $DKRC; notify-send 'rules reloaded', \
    prompt "Do you really want to quit dk ?" "Xexit" \
    }

######################################################################
##########################  WINDOWS MANAGEMENT  ######################
######################################################################
# close/close all unfocused/close all/kill focused window.
super + {_,ctrl,alt,shift} + End
    {\
    dkcmd win kill, \
    closethemall --unfocused, \
    closethemall --all, \
    xkill -id "$(xdo id $1)" \
    }

# focus master in the current workspace.
super + a
    dkcmd win focusm

# focus window/workspace previous/next
super + {_,alt + }{Left,Right}
    dkcmd {win focus,ws} {prev,next}

# focus next, 2nd, 3th or whatever windows from the focused one.
super + shift + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior}
    dkcmd win focus +{1-9}

# swap tiled window in/out of master, cycle tiled windows in place
super + {space,Tab}
    dkcmd win {swap,cycle}

# focus monitor next/previous/last
super + {_,shift,ctrl} + {BackSpace}
    dkcmd mon view {next,prev,last}

# {focus,send,send_&_follow} to monitor number
super + {_,alt,ctrl} + {Print,Scroll_Lock,Pause}
    dkcmd mon {view,send,follow} {$MONITOR1,$MONITOR2,$MONITOR3}

# {focus,send,send_&_follow} to workspace number
super + {_,alt,ctrl} + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior}
    dkcmd ws {view,send,follow} {1-9}

# focus the last window (in the current ws)/desktop
super + {_,shift + }less
    dkcmd {win focus,ws} last

# send/send & follow all windows of the current ws to ws nÂ°
super + shift + s ; {_,alt + }{KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior}
    dk_sendthemall -{s,f} {1-9}

# change active workspace layout (false changes the actual mode, static/dynamic)
super + l ; {a,d,f,g,n,r,s,t,w}
    dk_change_layouts {alternate,dyntile,false,grid,none,rtile,spiral,tile,tstack}

# toggle between monocle/last layout.
super + m
    dk_change_layouts mono

# toggle static/dynamic mode.
alt + m ; {d,s}
    dk_change_layouts {dynamic,static}

# toggle floating, sticky
super + alt + {s,space}
    dkcmd win {float,stick}

# toggle fullscreen/fake fullscreen (enable manipulating fullscreen window)
{_,alt +} F11
    dkcmd win {full,fakefull}

# move the active window up/down the stack
super + ctrl + {KP_Add,KP_Subtract}
    dkcmd win mvstack {up,down}

# resize/move (floating) window using custom script
# none effective in grid layout.
alt + {_,ctrl + }{Left,Up,Down,Right}
    dk_winresize --{resize,move} {Left,Up,Down,Right}

# change number of windows in master or first stack
super + {_,shift + }{KP_Add,KP_Subtract}
    dkcmd set {master,stack} {+1,-1}

# change gap width
alt + {KP_Add,KP_Subtract}
    dkcmd set gap {+2,-2}

# change border widths
alt + ctrl + {_,shift + }{equal,minus}
   dkcmd set border {width,outer_width} {+1,-1}

# vim:ft=sxhkdrc
