#########################################################################
# THIS FILE IS THE BSPWM WINDOWS, DESKTOP, MONITORS & LAYOUTS SHORTCUTS #
#########################################################################
# reload/restart/quit bspwm.
ctrl + alt + {c,r,q}
    { \
    ~/.config/bspwm/bspwmrc -r, \
    bspc wm -r, \
    prompt "Do you really want to quit Bspwm ?" "Xexit" \
    }

################### APPLICATIONS ##################

super + Return
    bspwm_run xterm

# URxvt terminals
super + u ; {a,b,c,d,e,f,h,j,m,n,p,r,s,t,x,y}
    bspwm_run_urxvt \
    {\
    aur-cli,bashterm,cmus,mpm,mutt,ranger,htop,jnettop,pulsemixer, \
    ncmpcpp,pacman-cli,newsboat,vim_script,termscp,ripper,youtube-viewer \
    }

# most used gui applications
super + g ; {c,e,f,g,o,p,w}
    {\
    bspwm_run chromium, \
    bspwm_run lite-xl, \
    bspwm_run pcmanfm, \
    bspwm_run geany, \
    bspwm_run code-oss, \
    bspwm_run pavucontrol, \
    bspwm_run Navigator \
    }

################# WINDOWS MANAGEMENT ##################

# equalize windows size in the viewport
super + @equal
    bspc query -N -d | xargs -I % bspc node % -B

# center term in screens.
super + c
    center_default_terminal

# close/kill focused window.
super + {_,ctrl + }q
    bspc node -{c,k}

# close all windows in the present desktop.
super + alt + ctrl + c
    closethemall

# close {or kill} all windows or except the focused/marked ones.
super + alt + {n,c,k}
    { \
    bspwm_nodes_operations --close-all-local, \
    bspwm_nodes_operations --close-all-local-non-focused, \
    bspwm_nodes_operations --kill-all-local-non-focused \
    }

################### MONITORS ########################

# focus to next monitor.
#super + BackSpace
#    bspc monitor -f next

# send focused window to next {right,left} monitor.
super + {_,shift + }BackSpace
    bspc node -m {east,west}

############## LAYOUTS/STATES/FLAGS ####################

# alternate between the tiled and monocle layout.
super + m
    bspwm_change_layouts -m

# alternate, longest_side, spiral
alt + l ; {a,l,s}
    bspwm_change_layouts -{a,l,s}

# set the window state.
super + alt + {f,p,s,t}
    bspwm_alternate_state -{nf,np,ns,nt}

# assign/remove the locked flag to all windows in the current desktop.
super + Caps_Lock ; {l,u}
    bspwm_nodes_operations {--lock-all-local,--unlock-all-local}

# set the node flag.
super + ctrl + {m,l,s,p}
    bspc node -g {marked,locked,sticky,private}

################## BRING ######################

# Summon all marked windows across all desktops to the current one.
super + b ; m
    bspwm_nodes_operations --summon-all-marked

# bring the windows of the given desktop to the current one.
super + b ; {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspwm_nodes_operations --bring-desktop-here {1-9,10}

################### FOCUS ####################

# focus the next/previous empty desktop.
ctrl + shift + {Left,Right}
    bspc desktop --focus {prev,next}.local.!occupied

# focus left/right occupied desktop.
ctrl + alt + {Left,Right}
    bspc desktop --focus {prev,next}.occupied

# focus the last node/desktop.
super + {_,shift + }less
    bspc {node,desktop} --focus last

# focus the older or newer node in the focus history.
super + {o,n}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus the parent node of a node
super + p
    bspc node @parent -f

# focus or send (focused node) to the given desktop (using numpad).
super + {_,alt + }{KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspc {desktop -f,node -d} '^{1-9,10}'

# focus the next floating window.
super + f
    bspc node --focus next.floating

# focus the previous/next window to the focused one if there is,
# otherwise focus the next occupied desktop on the next monitor.
super + shift + {Prior,Next}
    {\
    bspc node -f prev.local || bspc desktop -f prev.occupied, \
    bspc node -f next.local || bspc desktop -f next.occupied \
    }

################### SEND #####################

# send and follow focused node to given desktop (using numpad).
super + ctrl + alt + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspwm_move_follow '^{1-9,10}'

# send and follow all nodes in the current desktop to the given one
super + ctrl + shift + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspwm_nodes_operations --send-desktop-there '^{1-9,10}'

# send window to last split.
super + y
    bspc query --nodes -n focused.automatic \
    && bspc node -n last.!automatic \
    || bspc node last.leaf -n focused

# send the marked/focused node to a receptacle.
super + ctrl + r
    bspwm_smart_presel

# send window to left/right empty desktop.
super + ctrl + {Left,Right}
    bspc node --to-desktop {prev,next}.!occupied --focus

######## CIRCULATE/FLIP/ROTATE/SWAP ########

# circulate the leaves of the tree.
super + {_,shift + }c
    bspc node @/ --circulate {backward,forward}

# flip layout vertically/horizontally.
super + {_,shift + }l
    bspc node @/ --flip {vertical,horizontal}

# rotate all the nodes in screen.
super + shift + r
    bspc node @/ --rotate {90,-90}

# focus or swap the node in the given direction.
super + {_,shift + }{Left,Down,Up,Right}
    bspc node --{focus,swap} {west,south,north,east}

# swap current node with the next/previous one.
super + {_,shift + }s
    bspc node --swap {next.active,prev.active}

# swap the current node and the biggest node in the same desktop.
super + shift + b
    bspc node --swap biggest.local; bspc node --focus biggest.locals

# swap focused window with the last focused one.
super + w
    bspc node --swap last

# layout splits are balanced vertical/horizontal
super + {z,x}
    bspwm_arrange_tree

############ PRESELECT/RECEPTACLES ############

# swap nodes or create a receptacle in the given direction if none.
super + alt + {Left,Down,Up,Right}
    bspwm_smart_move {west,south,north,east}

# kill all existing receptacles.
super + shift + k
    bspwm_nodes_operations --kill-all-receptacles

# insert a preselection in the given direction.
super + Insert ; {Left,Down,Up,Right}
    bspc node -p {west,south,north,east}

# preselect the ratio.
super + ctrl + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node/desktop.
super + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

############### MOVE/RESIZE ################

# move a floating window.
ctrl + {Left,Down,Up,Right}
    bspc node -v {-10 0,0 10,0 -10,10 0}

# mode for dynamic gaps. Continuous input mode & Escape to exit mode.
ctrl + g : {h,j,k,l}
    bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# move floating windows with the arrow keys. Continuous input mode.
#alt + f : {Left,Down,Up,Right}
#    bspc node -v {-20 0,0 20,0 -20,20 0}

# resize node in the given direction.
alt + {Left,Down,Up,Right}
    bspwm_resize {west,south,north,east} 25

#[mouse control]
# move or resize window.
alt + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}

# vim:ft=sxhkdrc
