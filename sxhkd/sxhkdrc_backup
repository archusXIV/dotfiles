[reload the hotkeys daemon]
# reload sxhkd configuration files.
super + Escape
    pkill -USR1 -x sxhkd; \
    notify-send "sxhkd config reloaded"

[dmenu/rofi]
Menu ; {d,r}
    {dmenu-chooser,rofi-chooser}

[applications bindings]
# terminal emulators
super + Return
    $TERMINAL

# center term in screens.
super + shift + {KP_End,KP_Down,KP_Next}
    xdo move -n $TERMINAL {-x 290 -y 200,-x 2200 -y 200,-x 4130 -y 200}

super + t ; {r,s}
    {\
    xtranger, \
    xterm -e 'sudo search_install' \
    }

# URxvt applications
super + u ; {b,c,d,e,f,h,j,m,n,p,r,s,x,y}
    urxvt_apps -{b,c,d,e,f,h,j,m,n,p,r,s,x,y}

# gui applications
super + g ; {e,f,g,v,w}
    {\
    $EDITOR, \
    $FILEMNGR, \
    geany, \
    $VIRTMNGR, \
    $BROWSER \
    }

# audio-video applications
super + v ; {e,g,p,q}
    {\
    pulseaudio-equalizer-gtk, \
    qv4l2, \
    pavucontrol, \
    qvidcap \
    }

super + shift + v ; {d,s,k}
    record_options -{d,s,k}

[polycontrol]
# toggle/restart polybar(s)
ctrl + {_,shift + }{KP_End,KP_Down,KP_Next,KP_Left}
    polybar_control -{t,r}{1,2,3,a}

[webcam_rectangle]
# controls the webcam rectangle position on the screen.
alt + shift + {Left,Down,Up,Right}
    webcam_rectangle {1435 0,0 715,0 0,1435 715}

[volume/player control]
XF86Audio{Lower,Raise}Volume
    pulsemixer --change-volume {-,+,}5

XF86AudioMute
    pulsemixer --toggle-mute

#XF86Audio{Play,Pause}
alt + F11
    mediacontrol --toggle

#XF86AudioNext
alt + F12
    mediacontrol --next

#XF86AudioPrev
alt + F9
    mediacontrol --prev

#XF86AudioStop
alt + F10
    mediacontrol --stop

[mic control]
alt + XF86AudioMute
    amixer set Capture toggle


[restart/quit bspwm.]

super + alt + {r,q}
    { \
    bspwm_restart, \
    prompt "Do you really want to quit Bspwm ?" "Xexit" \
    }

# Invoke the session management menu (log out, lock, reload, reboot, shutdown).
ctrl + alt + Delete
    rofi_run -l

[scratchpad]
super + e
    bspwm_scratchpad $EDITOR

super + z
    bspwm_scratchpad $TERMINAL

super + p
    bspwm_scratchpad pulsemixer

[close and kill]

# close {or kill} focused window.
super + {_,ctrl + }q
    bspc node -{c,k}

# close {or kill} all windows or except the focused/marked ones.
super + alt + {n,c,k}
    { \
    bspwm_nodes_operations --close-all-local, \
    bspwm_nodes_operations --close-all-local-non-focused, \
    bspwm_nodes_operations --kill-all-local-non-focused \
    }

# close all windows with the same WM_CLASS in the present desktop.
super + alt + ctrl + c
    xdo close -c

[monitors]

# move focus to next monitor.
super + BackSpace
    bspc monitor -f next

# send focused window to next monitor.
super + shift + BackSpace
    bspc node -m next --follow

[state/flags]

# alternate between the tiled and monocle layout.
super + m
    bspc desktop -l next

# set the window state.
super + alt + {f,p,s,t}
    bspwm_alternate_state -{nf,np,ns,nt}

# set the node flag.
super + ctrl + {m,l,s,p}
    bspc node -g {marked,locked,sticky,private}

# assign/remove the locked flag to all windows in the current desktop.
super + l ; {l,u}
    bspwm_nodes_operations {--lock-all-local,--unlock-all-local}

[bring]

# Summon all marked windows across all desktops to the current one.
super + b ; m
    bspwm_nodes_operations --summon-all-marked

# bring the windows of the given desktop to the current one.
super + b ; super + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspwm_nodes_operations --bring-desktop-here {1-9,10}

[focus]

# focus the next/previous empty desktop.
ctrl + shift + {Left,Right}
    bspc desktop -f {prev,next}.local.!occupied

# focus left/right occupied desktop.
ctrl + alt + {Left,Right}
    bspc desktop --focus {prev,next}.occupied

# focus the last node/desktop.
super + {_,shift + }less
    bspc {node,desktop} --focus last.occupied

# focus the older or newer node in the focus history.
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop (using numpad).
super + {_,alt + }{KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspc {desktop -f,node -d} '^{1-9,10}'

[send]

# send and follow focused node to given desktop (using numpad).
super + ctrl + alt + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    id=$(bspc query -N -n); bspc node -d ^{1-9,10}; bspc node -f ${id}

# send and follow all nodes in the current desktop to the given one
super + ctrl + shift + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspwm_nodes_operations --send-desktop-there '^{1-9,10}'

# send window to last split.
super + y
    bspc query --nodes -n focused.automatic \
    && bspc node -n last.\!automatic \
    || bspc node last.leaf -n focused

# send the marked/focused node to a receptacle.
super + ctrl + r
    bspwm_smart_presel

# send window to left/right empty desktop.
super + ctrl + {Left,Right}
    bspc node --to-desktop {prev,next}.!occupied --focus

[circulate/flip/rotate/swap]

# circulate the leaves of the tree.
super + {_,shift + }c
    bspc node @/ --circulate {backward,forward}

# flip layout vertically/horizontally.
super + {_,shift + }l
    bspc node @/ --flip {vertical,horizontal}

# rotate all the nodes in screen.
super + shift + r
    bspc node @/ --rotate {90,-90}

# focus or swap the node in the given direction.
super + {_,shift + }{Left,Down,Up,Right}
    bspc node -{f,s} {west,south,north,east}

# swap current node with the next one.
super + s
    bspc node --swap next.active --focus

# swap current node with the previous one.
alt + s
    bspc node --swap prev.active --focus

# swap the current node and the biggest node in the same desktop.
super + shift + b
    bspc node -s biggest.local

# swap focused window with the last one.
super + x
    bspc node --swap last

[copy/paste desktop]

# copy and paste all window nodes from active workspace to another one.
super + ctrl + {c,v}
    bspwm_copy-paste_desktop -{cd,pd}

[preselect/receptacles]

# swap nodes or create a receptacle in the given direction if none.
super + alt + {Left,Down,Up,Right}
    bspwm_smart_move {west,south,north,east}

# kill all existing receptacles.
super + k
    bspwm_nodes_operations --kill-all-receptacles

# insert a preselection in the given direction.
super + Insert ; {Left,Down,Up,Right}
    bspc node -p {west,south,north,east}

# preselect the ratio.
super + ctrl + {KP_End,KP_Down,KP_Next,KP_Left,KP_Begin,KP_Right,KP_Home,KP_Up,KP_Prior,KP_Insert}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node/desktop.
super + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

[move/resize]

# move a floating window.
ctrl + {Left,Down,Up,Right}
    bspc node -v {-10 0,0 10,0 -10,10 0}

# mode for dynamic gaps. Continuous input mode & Escape to exit mode.
alt + g : {h,j,k,l}
    bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# move floating windows with the arrow keys. Continuous input mode.
alt + f : {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# resize node in the given direction.
alt + r : {Left,Down,Up,Right}
    bspwm_resize {west,south,north,east} 25

[mouse control]

# move or resize window.
alt + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}

# ungrab when releasing a mouse button.
alt + @button{1-3}
    bspc pointer -u
