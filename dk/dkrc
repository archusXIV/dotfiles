#!/bin/bash

# shellcheck source=/dev/null
# DK WINDOW MANAGER CONFIGURATION FILE

_main() {
    # close all existing windows first
    for id in $(wmctrl -lx | cut -d ' ' -f 1); do
        dkcmd win "$id" kill
    done >/dev/null

    # initialize 9 workspaces (1-9) (default: 1/monitor)
    dkcmd set numws=9

    # default workspace '_' values used when allocating new workspaces
    # can be applied to all existing workspaces when passed 'apply' after ws=_
    # D=dwindle G=grid M=mono N=none R=rtile S=spiral T=tile W=tstack
    dkcmd set ws=_ apply layout=rtile master=1 stack=4 \
    pad {l,r,t,b}=5 gap=6 msplit=0.70 ssplit=0.5
    dkcmd set ws=1 layout=grid

    # getting the workspaces names/layouts and adding distinction uppercase letters
    _wslayout

    # Indicates the active startup workspace layout beside the name.
    # The polybar ewmh module will look like this:
    # 1:T 2:S 3:N etc...(name:layout)
    # shellcheck disable=SC2046
    dkcmd set static_ws=true \
    ws=1 name=1:$(_wslayout | awk '{print $1}') mon=$MONITOR1 \
    ws=2 name=2:$(_wslayout | awk '{print $2}') mon=$MONITOR1 \
    ws=3 name=3:$(_wslayout | awk '{print $3}') mon=$MONITOR1 \
    ws=4 name=4:$(_wslayout | awk '{print $4}') mon=$MONITOR2 \
    ws=5 name=5:$(_wslayout | awk '{print $5}') mon=$MONITOR2 \
    ws=6 name=6:$(_wslayout | awk '{print $6}') mon=$MONITOR2 \
    ws=7 name=7:$(_wslayout | awk '{print $7}') mon=$MONITOR3 \
    ws=8 name=8:$(_wslayout | awk '{print $8}') mon=$MONITOR3 \
    ws=9 name=9:$(_wslayout | awk '{print $9}') mon=$MONITOR3
    
    # let's include windows rules function
    source ~/.config/dk/_WindowsRules

    if ! hash polybar wmctrl >/dev/null 2>&1; then
        notify-send -t 0 -u critical \
        'polybar, wmctrl should be installed...'
    fi

    # checking external scripts
    _check launch_polybar && launch_polybar &
    _check sxhkd-start && sxhkd-start &

    # global settings
    dkcmd set {focus_open,tile_tohead,obey_motif}=true
    dkcmd set {focus_urgent,focus_mouse,tile_hints,smart_{border,gap}}=false
    dkcmd set win_{minwh,minxy}=50
    dkcmd set mouse mod=super move=button1 resize=button3

    # assigning borders colors.
    [[ -f $HOME/.Xresources ]] && _colours

    _WindowsRules

    dkcmd set static_ws=false

    polybar-msg -p $(pgrep --full dk-bar-3) \
    action "#static_ws-ipc.hook.1" >/dev/null 2>&1

    # focusing monitor in the center
    dkcmd mon HDMI-0; dkcmd ws 2

    date > "$XDG_CONFIG_HOME/dk/dkrc.log"
    dkcmd status type=full num=1 >> "$XDG_CONFIG_HOME/dk/dkrc.log"

}

_check() { command -v "$1" >/dev/null; }

_colours() {
    # let's use Xresources theme colors
    local blk blu red ylw
    blk=$(xrdb -query | awk '/color8:/{print $NF}')
    blu=$(xrdb -query | awk '/color4:/{print $NF}')
    red=$(xrdb -query | awk '/color1:/{print $NF}')
    ylw=$(xrdb -query | awk '/color3:/{print $NF}')

    dkcmd set border width=1 outer_width=0 \
    colour \
    focus="$blu" \
    urgent="$ylw" \
    unfocus="$blk" \
    outer_focus="$blu" \
    outer_urgent="$red" \
    outer_unfocus="$blk"

}

_reload() {
    source ~/.config/dk/_WindowsRules
    _WindowsRules
    _colours
    date > "$XDG_CONFIG_HOME/dk/dkrc.log"
    dkcmd status type=full num=1 \
    | sed -n '/^rule:/,/^$/p' >> "$XDG_CONFIG_HOME/dk/dkrc.log"
    notify-send 'windows rules reloaded'
    exit 0
}

_wslayout() {
    awk '
    /^workspaces:/ {sub(/^workspaces: /, ""); gsub(/(*)?[0-9]*:\w*:/, ""); print; exit}
    ' <(dkcmd status type=full num=1) \
    | sed 's/dwindle/D/g;s/grid/G/g;s/mono/M/g;s/none/N/g;
    s/rtile/R/g;s/spiral/S/g;s/tile/T/g;s/tstack/W/g'
}

# sxhkd shortcut: "$HOME"/.config/dk/dkrc -r
case "$1" in
    -r) _reload ;;
    -s) _main "${@}" ;;
esac

_main "${@}"
