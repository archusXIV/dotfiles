#!/bin/bash

# determine where to place the log file
logfile="$HOME/.config/dk/dkrc.log"
: > "$logfile"

# shellcheck disable=SC1091
# let's include our windows rules
. "$HOME"/.config/dk/_WindowsRules

{ # compound command to redirect all output

	# workspace settings
	# ------------------------

	# initialize 9 workspaces (1-9) (default: 1/monitor)
	dkcmd set numws=9

	# default workspace '_' values used when allocating new workspaces
	# can be applied to all existing workspaces when passed 'apply' after ws=_
	# dkcmd set ws=_ apply layout=rtile master=1 stack=3 gap=5 msplit=0.6 ssplit=0.5
	dkcmd set ws=_ apply layout=rtile master=1 stack=3 \
	pad {l,r,t,b}=6 gap=5 msplit=0.65 ssplit=0.5

	# none default layouts
	dkcmd set ws=1 layout=grid
	dkcmd set ws=7 layout=mono
	
	mon1='DVI-D-0'
	mon2='HDMI-0'
	mon3='DP-0'

	# uppercase letters represent layouts
	dkcmd set static_ws=true \
		ws=1 name='1:G' mon=$mon1 ws=2 name='2:R' mon=$mon1 ws=3 name='3:R' mon=$mon1 \
		ws=4 name='4:R' mon=$mon2 ws=5 name='5:R' mon=$mon2 ws=6 name='6:R' mon=$mon2 \
		ws=7 name='7:M' mon=$mon3 ws=8 name='8:R' mon=$mon3 ws=9 name='9:R' mon=$mon3

	dkcmd set {focus_{mouse,open},tile_tohead,obey_motif}=true
	dkcmd set {focus_urgent,tile_hints,smart_{border,gap}}=false
	dkcmd set win_{minwh,minxy}=50
	dkcmd set mouse mod=super move=button1 resize=button2
	
	# borders
	dkcmd set border width=2 outer_width=1
	
	if [ -e "$HOME"/.Xresources ]; then
		blk=$(xrdb -query | awk '/color8:/{print $NF}')
		blu=$(xrdb -query | awk '/color4:/{print $NF}')
		red=$(xrdb -query | awk '/color1:/{print $NF}')
		ylw=$(xrdb -query | awk '/color3:/{print $NF}')

		dkcmd set border colour \
			focus="$blu" \
			urgent="$red" \
			unfocus="$ylw" \
			outer_focus="$blu" \
			outer_urgent="$red" \
			outer_unfocus="$blk"
	else
		dkcmd set border colour \
			focus='#6699cc' \
			unfocus='#444444' \
			urgent='#ee5555' \
			outer_focus='#222222' \
			outer_unfocus='#222222' \
			outer_urgent='#222222'
	fi
	
	# window rules
	# --------------
	_WindowsRules

	command -v sxhkd_start >/dev/null && launch_polybar &
	
	[ -p "$SXHKD_FIFO" ] && rm -f "$SXHKD_FIFO"
	command -v sxhkd_start >/dev/null && sxhkd_start &

} >> "$logfile" 2>&1

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
	hash notify-send && notify-send -t 0 -u critical "dkrc has errors"
	"$(awk '/error:/ {sub(/^error: /, ""); gsub(/</, "\<"); print}' "$logfile")"
	exit 1
fi

exit 0
