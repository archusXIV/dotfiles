#!/bin/bash

# Author: Barret E (2022) <archus@protonmail.com>
# https://github.com/archusXIV/dotfiles
# Simple script to control pulseaudio volume/microphone.
# For instance I use the polybar [module/pulseaudio-ipc] (sink) for sound output,
# and for my microphone (source) [module/mic-ipc]
# https://github.com/archusXIV/dotfiles/blob/main/polybar/active-modules-bar2.ini
# Usage: volume_control sink --{up,down,toggle} (preset is -/+5%)
#        volume_control source --{up,down,toggle} (preset is -/+1%)
#        volume_control sink --set "value" (onthefly_preset)
#        volume_control source --set "value" (onthefly_preset)

[[ -z $(pidof polybar) ]] && exit 1

# change default presets values to your liking.
sink_preset=5
source_preset=1
# not this one.
onthefly_preset="$3"

DEFAULT_SINK=$(pactl get-default-sink)
DEFAULT_SOURCE=$(pactl get-default-source)

# Are we muted?
GET_SINK_MUTE=$(pactl get-sink-mute "${DEFAULT_SINK}")
GET_SOURCE_MUTE=$(pactl get-source-mute "${DEFAULT_SOURCE}")

# finding proper pid for proper bar-2
WDMNGR=$(awk '/Name/{print $2}' < <(wmctrl -m))
BARPID=$(pgrep --full "$WDMNGR"-bar-2)

# sending message to polybar
_hook_sink_on() {
    polybar-msg -p "$BARPID" action \
    "#volume-ipc.hook.1" >/dev/null 2>&1
}

_hook_source_on() {
    polybar-msg -p "$BARPID" action \
    "#mic-ipc.hook.1" >/dev/null 2>&1
}

# if polybar is hidden by eg: mpv in fullscreen; then get a notification anyway.
_notify_volume() {
    notify-send "Main pulseaudio volume \
    $(pactl get-sink-volume "${DEFAULT_SINK}" \
    | awk '{if(NR!=2) {print $5}}')"
}

case "$1" in
    sink)   case "$2" in
                --up)   # In case sound is muted we toggle mute.
                        if [[ ${GET_SINK_MUTE} == 'Mute: yes' ]]; then
                            pactl set-sink-mute "${DEFAULT_SINK}" toggle
                            _hook_sink_on
                            _notify_volume
                        else
                            pactl set-sink-volume "${DEFAULT_SINK}" +${sink_preset}%
                            _hook_sink_on
                            _notify_volume
                        fi
                ;;
                --down) pactl set-sink-volume "${DEFAULT_SINK}" -${sink_preset}%
                        _hook_sink_on
                        _notify_volume
                ;;
                --toggle)   if [[ ${GET_SINK_MUTE} == 'Mute: yes' ]]; then
                                pactl set-sink-mute "${DEFAULT_SINK}" toggle
                                _hook_sink_on
                            else
                                pactl set-sink-mute "${DEFAULT_SINK}" toggle
                                polybar-msg hook volume-ipc 1 >/dev/null 2>&1
                            fi
                ;;
                --set )     pactl set-sink-volume "${DEFAULT_SINK}" "${onthefly_preset}"%
                            _hook_sink_on
                ;;
            esac
    ;;
    source) case "$2" in
                        # Same as above.
                --up)   if [[ ${GET_SOURCE_MUTE} == 'Mute: yes' ]]; then
                            pactl set-source-mute "${DEFAULT_SOURCE}" toggle
                            pactl set-source-volume "${DEFAULT_SOURCE}" 80%
                            _hook_source_on
                        else
                            pactl set-source-volume "${DEFAULT_SOURCE}" +${source_preset}%
                            _hook_source_on
                        fi
                ;;
                --down) pactl set-source-volume "${DEFAULT_SOURCE}" -${source_preset}%
                        _hook_source_on
                ;;
                --toggle)   if [[ ${GET_SOURCE_MUTE} == 'Mute: yes' ]]; then
                                pactl set-source-mute "${DEFAULT_SOURCE}" toggle
                                pactl set-source-volume "${DEFAULT_SOURCE}" 80%
                                _hook_source_on
                            else
                                pactl set-source-mute "${DEFAULT_SOURCE}" toggle
                                pactl set-source-volume "${DEFAULT_SOURCE}" 0%
                                polybar-msg hook mic-ipc 1 >/dev/null 2>&1
                            fi
                ;;
                --set )     pactl set-source-volume "${DEFAULT_SOURCE}" "${onthefly_preset}"%
                            _hook_source_on
            esac
    ;;
esac
