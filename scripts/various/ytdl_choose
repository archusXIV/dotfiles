#!/bin/bash

# Quickly choose and download/play an existing audio/video url in a playlists...
# first install youtube-dl yt-dlp then create a symlink:
# ln -s /usr/bin/yt-dlp ~/.local/bin/youtube-dl

# shellcheck disable=SC2076,SC2048
: "${MPM_DIR:-$XDG_DATA_HOME/mpv-playlists-manager}"

playlists_dir="$MPM_DIR/playlists"
TMP1="$MPM_DIR/playlists/tmp1.m3u"
TMP2="$MPM_DIR/playlists/tmp2.m3u"

function _Selection {

    PS3=" Choose a playlist: "
    echo ""

    select playlist in $(find "$playlists_dir" -name "*.m3u" \
                        | sort -d | sed 's,.*/,,'); do

        if [[ $(grep "" -c "$playlists_dir"/"$playlist") -eq 1 ]]; then
            echo " Selected list is empty...exiting"
            exit 1
        else
            mapfile -t PLAYLIST < <(grep -v '#EXTM3U' "$playlists_dir"/"$playlist")
        fi

        echo ""
        for item in "${PLAYLIST[@]}"; do
            youtube-dl --get-title "$item"
        done | cat -n 2>/dev/null
        echo ""

        read -r -p ' [D]ownload, [P]lay: ' choice
        case "$choice" in
            d|D) _Download ;;
            p|P) _Play ;;
        esac

    done

}

function _Download {

    cd "$MPM_DIR"/videos || return

    echo ""
    IFS=","; read -r -a array -p " Links to download, eg: 1,3,5: "

    for i in ${array[*]}; do
        ((i++))
        url=$(sed -n "${i}p" "$playlists_dir"/"$playlist")
        # Sending choosen urls in a temporary file for future operation.
        echo "$url" >> "$TMP1"

        [[ $url =~ 'youtube.com' ]] && {
            youtube-dl --merge-output-format mp4 --progress "$url"
            clear
        } || youtube-dl --no-warnings --progress "$url" && clear
    done

    # let's remove downloaded links from the original file
    # and sending the other ones in a second temporary file...
    grep -v -F "$(grep '^[[:print:]]' "$playlists_dir"/"$playlist")" >> "$TMP2"

    # ...that we now rename with the original file name.
    mv -f "$TMP2" "$playlists_dir"/"$playlist"
    rm "$TMP1"
    unset IFS
    notify-send 'Downloads completed'
    exit

}

function _Play {

    echo ""
    IFS=","; read -r -a array -p " Links to load, eg: 1,3,5: "

    for i in ${array[*]}; do
        ((i++))
        url=$(sed -n "${i}p" "$playlists_dir"/"$playlist")
        echo "$url" >> "$TMP1"
    done

    mpv "$TMP1"
    rm "$TMP1"
    unset IFS
    exit

}

_Selection "${@}"
