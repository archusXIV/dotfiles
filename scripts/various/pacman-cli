#!/bin/bash

# Author: Barret E (2021) <archus@protonmail.com>
# https://github.com/archusXIV/dotfiles
# Dependencies: fzf, pacdiff, reflector, vim, updates-manager.
# https://github.com/archusXIV/dotfiles/blob/main/scripts/various/updates-manager
#
# This script shows a menu to let you choose over severals pacman tools and options.
# In order to install or remove packages it uses fzf utility on the fancy side.
# We can also find and purge orphan packages, refresh our mirrorlist, purge the cache,
# edit pacman.conf/makepkg.conf and of course update the system.

color_off=$'\e[0m';
red=$'\e[0;31m';
green=$'\e[0;32m';

declare -a dependencies=( "fzf" "pacdiff" "reflector" "vim" "updates-manager" )

for package in "${dependencies[@]}"; do
    [[ -z $(command -v "$package") ]] && {
        echo " ${red}Missing dependency...$package"
        notify-send "pacman-cli missing dependency...$package"
        exit 127
    }
done

_Menu() {
    clear
    while [[ -f /etc/pacman.conf ]]; do
        clear
        echo ""
        echo -e "                                ${green}Installed packages: $(pacman -Q | wc -l) - ${red}System updates: $(grep "" -c "$XDG_RUNTIME_DIR"/combined.list)${color_off}\n"
        echo -e "                                            ::pacman options::"
        echo -e "                        ::To select multiple packages in listing views, press Tab:: "
        echo -e "                       ┌───────────────────────────────────────────────────────────┐"
        echo -e "                       │    1) Search & Install           6) Update the system     │"
        echo -e "                       │    2) Uninstall package(s)       7) Pacdiff               │"
        echo -e "                       │    3) List installed packages    8) Edit pacman.conf      │"
        echo -e "                       │    4) Purge orphans/cache        9) Edit makepkg.conf     │"
        echo -e "                       │    5) Refresh mirrors            x) Exit                  │"
        echo -e "                       └───────────────────────────────────────────────────────────┘"
        echo -e "                                             ${green}Select an item${color_off}"
        echo ""
        read -rsn 1 option
        case "$option" in
            1) _Install ;;
            2) _Uninstall ;;
            3) _PackagesList ;;
            4) _Purge ;;
            5) _Reflector ;;
            6) updates-manager --list ;;
            7) _Pacdiff ;;
            8) sudo vim /etc/pacman.conf ;;
            9) sudo vim /etc/makepkg.conf ;;
            x|X) clear && exit ;;
            *) echo -e " ${red} Wrong option!"
               echo " ${green}Wait and try again...${color_off}"
               echo ""
               sleep 3s
               clear
            ;;
        esac
    done
}

_Install() {
    sudo pacman -Sy >/dev/null 2>&1
    sudo pacman -Fy >/dev/null 2>&1
    pacman -Slq \
        | fzf \
        --multi \
        --preview \
        'cat <(sudo pacman -Si {1}) <(sudo pacman -Fl {1} | awk "{print \$2}")' \
        --layout=reverse \
        | xargs -ro sudo pacman -S
}

_Uninstall() {
    pacman -Qnq \
        | fzf \
        --multi \
        --preview \
        'cat <(sudo pacman -Si {1}) <(sudo pacman -Fl {1} | awk "{print \$2}")' \
        --layout=reverse \
        | xargs -ro sudo pacman -Rns
}

_PackagesList() {
    pacman -Qq \
        | fzf \
        --preview 'pacman -Qil {}' \
        --layout=reverse \
        --bind 'enter:execute(pacman -Qil {} | less)'
}

_Purge() {
    read -rn 1 -p ' Purge [O]rphans or [C]ache: ' purge
    case "$purge" in
        o|O)
            local pkgs="$XDG_CACHE_HOME/orphans_list.txt"
            echo ""
            if [[ -n $(pacman -Qdt) ]]; then
                touch "$pkgs"
                pacman -Qdt > "$pkgs" && cat "$pkgs"
                echo ""
                echo " ${red}Would you like to purge orphan packages? [N/y]:${color_off}"
                read -r orphan
                case "$orphan" in
                    N|n|no )
                        _menu
                    ;;
                    y|Y|yes)
                        sudo pacman -Rdd $(pacman -Qdtq)
                        echo " ${green}A list of removed packages has been created"
                        echo " in $pkgs${color_off}"
                        sleep 5s
                    ;;
                    *)
                        echo " Bad option..."; sleep 2s && _menu
                    ;;
                esac
            else
                echo " ${green}No orphan package found.${color_off}"
                sleep 3s
                _menu
            fi
        ;;
        c|C)
            sudo pacman -Scc
        ;;
    esac
    return 0
}


_Pacdiff() {
    if [[ -z $(find /etc -maxdepth 2 -name "*.pacnew" 2> /dev/null) ]]; then
        echo " ${green}No pacnew files found.${color_off}"
        sleep 3s
    else
        sudo pacdiff
    fi
}

_Reflector() {
    PS3=""
    echo ""
    echo " ${green}Select your country:"
    echo " Example for France: 21"
    echo -e " More details in a terminal, type: reflector --list-countries | less${color_off}\n"
    select country in $(reflector --list-countries \
        | sed '1d;2d;8d
        s/Hong Kong/Hong-Kong/;s/North Macedonia/North-Macedonia/;
        s/New Caledonia/New-Caledonia/;s/New Zealand/New-Zealand/;
        s/South Africa/South-Africa/;s/South Korea/South-Korea/;
        s/United States/United-States/;s/United Kingdom/United-Kingdom/' \
        | awk '{print $1}'); do

        case "$country" in
            Hong-Kong) country='Hong Kong' ;;
            New-Caledonia) country='New Caledonia' ;;
            New-Zealand) country='New Zealand' ;;
            North-Macedonia) country='North Macedonia' ;;
            South-Africa) country='South Africa' ;;
            South-Korea) country='South Korea' ;;
            United-Kingdom) country='United Kingdom' ;;
            United-States) country='United States' ;;
        esac

        sudo reflector \
            --country "$country" \
            --verbose \
            --latest 10 \
            --age 24 \
            --protocol https \
            --sort rate \
            --save /etc/pacman.d/mirrorlist
        echo " ${green}New mirrorlist saved.${color_off}"
        sleep 3s
        break
    done
}

_Menu "${@}"

