#!/bin/bash

# Author: Barret E <archus@protonmail.com>
# Youtube channel: <https://www.youtube.com/@linuxinfrench9388>
# Idea inspired by Yannick Vollenberg <https://nordri.vollenberg.ca>
# As the script name says, this will install an Achlinux base system
# on a simple disk layout following the arch way to Keep It Simple Stupid.
# Use it at your own risks....lol
# Download the script when logged in the arch live iso:
# curl -sL "https://raw.githubusercontent.com/archusXIV/dotfiles/main/scripts/various/install_arch" -O


# Colors
nc=$'\e[0;m';
g=$'\e[1;32m';
r=$'\e[0;31m';

description() {
    clear
    # setfont sun12x22
    cat << EOF

    # French
    ${g}Ce script va installer une Archlinux en UEFI sur le premier disque détecté,
    cfdisk sera utilisé pour Le partitionnement qui n'est pas automatisé.${nc}

    # English
    ${g}This script will install Archlinux in UEFI mode on the first detected disk.
    Partitioning will be done using cfdisk and it's not automatic.

    Partitions layout:${nc}
    sda1=/boot/efi sda2=/ sda3=/home
EOF
    sleep 7s
}

diskchoice() {
    
    if [[ $(lsblk -dno NAME | wc -l) -gt 1 ]]; then
        lsblk
        echo ""
        echo " ${g}Choose a disk for installation, eg: sda, sdb "
        read -r disk
        case "$disk" in
            sda)
                HWDISK=$(lsblk -dno NAME | awk 'NR==2 { print $1; exit }')
            ;;
            sdb)
                HWDISK=$(lsblk -dno NAME | awk 'NR==3 { print $1; exit }')
            ;;
            sdc)
                HWDISK=$(lsblk -dno NAME | awk 'NR==4 { print $1; exit }')
            ;;
        esac
    else
        HWDISK=$(lsblk -dno NAME | awk 'NR==2 { print $1; exit }')
    fi

}

default_inputs() {
    # Here we define the default settings that the user
    # should fill but didn't, just before we enter the chroot
    # if the variables are empty...
    case "$1" in
        -m)
            [[ -z $machine ]] && {
                echo " ${r}EMPTY host name!"
                echo " host name set to default...${nc}"
                machine="archlinux"
                sleep 2s
            }
        ;;
        -l)
            [[ -z $language ]] && {
                echo " ${r}your language is not set!"
                echo " language set to default...${nc}"
                lang="LANG=en_US.UTF-8"
                sleep 2s
            }
        ;;
        -k)
            [[ -z $keymap ]] && {
                echo " ${r}your keyboard layout is not set!"
                echo " keyboard layout set to default...${nc}"
                key="KEYMAP=us" font="FONT=lat2-16"
                sleep 2s
            }
        ;;
    esac
}

install() {
    clear
    local LOCATION TIMEZONE A B C
    
    LOCATION=$(curl --fail -s https://ipapi.co/country)
    TIMEZONE=$(curl --fail -s https://ipapi.co/timezone)
    A="1" B="2" C="3"

    if [[ $(id -u) == 0 ]]; then
        # Setting faster packages downloads.
        sed -i 's/#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf

        if [[ -n $(ls /sys/firmware/efi/efivars) ]]; then
            echo -e " ${g}Success, UEFI system detected.${nc}\n"
            sleep 2s

            timedatectl set-ntp true && timedatectl \
            && echo -e " ${g}Success, system clock updated.${nc}\n"
            sleep 2s

            diskchoice
            cfdisk /dev/$HWDISK
            
            echo -e " ${g}formating and mounting partitions.${nc}\n"
            sleep 1s
            
            mkfs.fat -F32 /dev/$HWDISK$A && mkfs.ext4 /dev/$HWDISK$B && mkfs.ext4 /dev/$HWDISK$C \
            && mount /dev/$HWDISK$B /mnt \
            && mkdir -p /mnt/{boot/efi,home} \
            && mount /dev/$HWDISK$A /mnt/boot/efi \
            && mount /dev/$HWDISK$C /mnt/home \
            && lsblk && sleep 2s

            echo " ${g}Getting fresh mirrors list for $LOCATION...${nc}"
            sleep 1s

            reflector --verbose --country "$LOCATION" --latest 10 --age 24 \
            --protocol https --sort rate --save /etc/pacman.d/mirrorlist

            echo -e " ${g}Installing Arch-Linux base system...${nc}\n"
            sleep 1s

            # pacstrap will not use the iso's archlinux-keyring.
            pacstrap -K /mnt base base-devel linux linux-headers linux-firmware \
            pacman-contrib grub efibootmgr os-prober gptfdisk fatresize networkmanager \
            reflector zip unzip p7zip nano wget vim mc git syslog-ng mtools usbutils \
            dosfstools lsb-release exfat-utils bash-completion man-db man-pages \
            xf86-input-{elographics,evdev,libinput,synaptics,vmmouse,void,wacom} \
            xf86-video-{amdgpu,ati,dummy,fbdev,intel,nouveau,openchrome,qxl,sisusb,vesa}

            cat /etc/pacman.d/mirrorlist > /mnt/etc/pacman.d/mirrorlist \
            && cat /etc/pacman.conf > /mnt/etc/pacman.conf

            echo -e " ${g}Generating fstab...${nc}\n"
            genfstab -U -p /mnt >> /mnt/etc/fstab \
            && sleep 2s

            echo -e " ${g}Entering installed system for configuration.${nc}\n"
            sleep 2s

            # if some user inputs are empty they will be set to defaults
            read -r -p "${g}"' Please fill the machine name: '"${nc}" machine
            default_inputs -m

            echo ""
            read -r -p "${g}"' Choose your language: [F]rench (France), [E]nglish (US): '"${nc}" language
            case "$language" in
                f|F) lang="LANG=fr_FR.UTF-8" ;;
                e|E) lang="LANG=en_US.UTF-8" ;;
            esac
            default_inputs -l

            echo ""
            read -r -p "${g}"' Choose your keyboard layout: [F]rench (fr), [E]nglish (us): '"${nc}" keymap
            case "$keymap" in
                f|F) key="KEYMAP=fr-latin9"
                    font="FONT=eurlatgr" ;;
                e|E) key="KEYMAP=us"
                    font="FONT=lat2-16" ;;
            esac
            default_inputs -k

            arch-chroot /mnt /bin/bash -c "
                ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime \
                && hwclock --systohc --utc \
                && echo $machine > /etc/hostname \
                && echo $key > /etc/vconsole.conf \
                && echo $font >> /etc/vconsole.conf \
                && echo ' ${g}Choose your locales using nano${nc}' && sleep 2s \
                && nano /etc/locale.gen && locale-gen \
                && echo $lang > /etc/locale.conf \
                && echo LC_COLLATE=C >> /etc/locale.conf \
                && echo '127.0.0.1    localhost' >> /etc/hosts \
                && echo '::1          localhost' >> /etc/hosts \
                && echo '127.0.1.1    $machine.localdomain    $machine' >> /etc/hosts \
                && mkinitcpio -p linux && clear \
                && echo ' ${g}Change the $USER password: ${nc}' \
                && passwd $USER \
                && echo ' ${g}Installing grub menu on first sector of \/dev\/$HWDISK, please be patient...${nc}' \
                && grub-install --target=x86_64-efi --efi-directory=/boot/efi \
                --bootloader-id=ARCH_GRUB && grub-mkconfig -o /boot/grub/grub.cfg \
                && systemctl enable NetworkManager \
                && timedatectl set-ntp true && exit
            "
            clear
            echo ""
            read -r -p "${g}"' Do you want to enter the new installed system? [Y/n] '"${nc}" enter
            case "$enter" in
                y|Y)
                    arch-chroot /mnt
                ;;
                n|N)
                    echo " ${g}Unmounting /mnt and rebooting.${nc}"
                    sleep 2s
                    umount -R /mnt && reboot
                ;;
                *)
                    arch-chroot /mnt
                ;;
            esac
        else
            clear
            echo ""
            echo " ${r}NON UEFI SYSTEM, exiting...${nc}"
            sleep 3s && exit 0
        fi
    else
        clear
        echo ""
        echo " ${r}ONLY ROOT USER CAN RUN THIS SCRIPT, exiting...${nc}"
        sleep 3s && exit 0
    fi

}

description
install
