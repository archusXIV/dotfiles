#!/bin/bash

# simple script to run simplescreenrecorder in hidden mode
# for the entered time & @screen.

SSR_FIFO="$XDG_RUNTIME_DIR/ssr.fifo"
# input-profiles directory contains {all,center,left,right}.conf files.
configs_path="$XDG_CONFIG_HOME/simplescreenrecorder/input-profiles"

_cleanup() {
    unset IFS
    rm "$SSR_FIFO"
    amixer set Capture,0 0%,0% mute nocap >/dev/null 2>&1
    polybar-msg action "#mic-ipc.hook.0" >/dev/null 2>&1
}

_usage() {
    echo " Usage:   ${0##*/} duration screen"
    echo " Example: ${0##*/} 00:15:30 {all,center,left,right}"
    echo " or:      ${0##*/} 15:30 {all,center,left,right}"
    [[ -p "$SSR_FIFO" ]] && _cleanup
    exit 1
}

if [[ $# -ne 4 ]]; then
    _usage
fi

if [[ -p "$SSR_FIFO" ]]; then
    rm "$SSR_FIFO" && mkfifo "$SSR_FIFO"
else
    mkfifo "$SSR_FIFO"
fi

amixer set Capture,0 80%,80% unmute cap >/dev/null 2>&1
polybar-msg action "#mic-ipc.hook.1" >/dev/null 2>&1

_timeConversion() {
    convertString="$1"
    IFS=":";
    if [[ ${#convertString} -eq 5 ]]; then
        read -r minutes seconds <<< "$convertString"
        totalSeconds=$((minutes * 60 + seconds))
    elif [[ ${#convertString} -eq 8 ]]; then
        read -r hours minutes seconds <<< "$convertString"
        totalSeconds=$(((hours * 3600) + (minutes * 60 + seconds)))
    else
        _usage
    fi
    unset IFS
}

# getting user input according to _usage function
while getopts d:s: opt; do
    case "${opt}" in
        d) duration=${OPTARG} ;;
        s) screen=${OPTARG} ;;
        *) _usage ;;
     esac
done

_timeConversion "$duration"
# simplescreenrecorder commands
simplescreenrecorder \
    --start-hidden \
    --settingsfile="$configs_path/$screen.conf" < "$SSR_FIFO" &

exec 4> "$SSR_FIFO"
sleep 1
echo "record-start" >&4
sleep "$totalSeconds"
echo "record-save" >&4
sleep 1
echo "quit" >&4
exec 4>&-

_cleanup
clear
exit
