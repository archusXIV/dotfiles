#!/bin/bash

# Author: Barret E (2020-21) <archus@protonmail.con>
# Yet Another Updates Viewer Script for Arch Linux based systems.
# Checks for updates, lists them in a file and passes the number in polybar.

arch="$XDG_CACHE_HOME/archlinux.list"
aur="$XDG_CACHE_HOME/aur.list"
archaur="$XDG_CACHE_HOME/combined.list"

_check_updates() {
    # checking dependencies
    for i in checkupdates polybar yay; do
        [[ -z $(command -v $i) ]] && exit 1
    done

    while true; do

        [[ ! -f "$arch" ]] && touch "$arch"
        [[ ! -f "$aur" ]] && touch "$aur"
        [[ ! -f "$archaur" ]] && touch "$archaur"

        # because we want to check out the updates list.
        checkupdates > "$arch"
        cat "$arch" > "$archaur"

        if (( $(yay -Qum 2> /dev/null | wc -l) > 0 )); then
            sleep 2s
            yay -Qum > "$aur"
            cat "$aur" >> "$archaur"

            # purge combined.list from possible double entries.
            if [[ -n $(uniq -d "$archaur") ]]; then
                sed -i -n \
                'G; s/\n/&&/; /^\([ -~]*\n\).*\n\1/d; s/\n//; h; P' \
                "$archaur"
            fi

        fi

        if [[ -n $(pidof polybar) ]]; then
            polybar-msg hook updates-ipc 1 >/dev/null 2>&1
        else
            break
        fi

        sleep 3598s

    done &
}

_ynp() {
    local screenprompt key default opts status

    default=y
    opts=yn

    [[ $1 =~ -([${opts}]) ]] \
        && default="${BASH_REMATCH[1]}" && shift

    screenprompt="$* [${default^^}/${opts/$default/}]"

    if [[ -t 2 ]]; then
        >&2 echo "$screenprompt"

        while :; do
            read -rsn 1

            key="${REPLY:-$default}"
            [[ $key =~ [${opts}] ]] || continue
            break
        done
    else
        key="$default"
    fi

    [[ ${key,,} = n ]] && status=1

    return "${status:-0}"
}

case "$1" in
    --hook) polybar-msg hook updates-ipc 1 >/dev/null 2>&1
    ;;
    --list) while read -r content; do

                echo "$content"

            done < "$archaur"

            if [[ -z $(cat "$archaur") ]]; then
                echo "No update available." && sleep 3s && exit 0
            else
                echo ""
                _ynp "Procede with updates?" || {
                echo "bye..." && exit 0
                }
                if (( $(wc -l "$aur" | awk '{print $1}') > 0 )); then
                    yay -Syu --aur
                    rm -rf $HOME/.ccache && {
                    (( $(wc -l "$arch" | awk '{print $1}') > 0 )) && {
                        rm "$archaur"
                        touch "$archaur"
                        sudo upp
                        }
                    }
                else
                    rm "$archaur" && touch "$archaur" && sudo upp
                fi
            fi
    ;;
    --updates)  _check_updates
    ;;
esac
