#!/bin/bash

# Author: Barret E <archus@protonmail.com>
# Youtube channel: <https://www.youtube.com/@linuxinfrench9388>
# Idea inspired by Yannick Vollenberg <https://nordri.vollenberg.ca>
# As the script name says, this will install an Achlinux desktop
# following the arch way to Keep It Simple Stupid, meaning no customization.
# Use it at your own risks....lol
# Download the script when logged in the arch live iso:
# curl -sL "https://raw.githubusercontent.com/archusXIV/dotfiles/main/scripts/various/install_desktop" -O
# chmod +x install_desktop && ./install_desktop

# Colors
nc=$'\e[0;m';
g=$'\e[1;32m';
r=$'\e[0;31m';
y=$'\e[93m';

_Description() {
    
    clear
    setfont sun12x22
    cat << EOF

                #                                                       
               # #      #####   ####  #    # #      # #    # #    # #    # 
              #   #     #    # #    # #    # #      # ##   # #    #  #  #  
             #     #    #    # #      ###### #      # # #  # #    #   ##   
            #########   #####  #      #    # #      # #  # # #    #   ##   
           #         #  #   #  #    # #    # #      # #   ## #    #  #  #  
          #           # #    #  ####  #    # ###### # #    #  ####  #    #
    
                    Desktop installation for lazy dudes made easy!
    
    # French (ne jamais lancer un script sans le lire auparavant)
    ${g}Ce script va installer le bureau de votre choix parmi la liste suivante:${nc}
    
    Preconfigurés: ${y}i3wm, Bspwm${nc} (lancement de session avec startx)
    
    ${g}i3wm et Bspwm sont lancés avec la commande 'startx' et non lightdm.
    Pour le premier lancement, entrez vos identifiants, puis lancez le script clone_wm:
    ./clone_wm, au redémarrage lancez startx et ouvrez geany pour lire le fichier README.md:
    alt + g puis g encore.${nc}
    
    Brut de chez brut: ${y}Cinnamon, KDE Plasma, Mate & Xfce${nc}
    
    # English (never run a script without reading it first)
    ${g}This script will install the desktop of your choice among the following list:${nc}
    
    Preconfigured: ${y}i3wm, Bspwm${nc} (startx launch the session)
    
    ${g}i3wm and Bspwm are launched with the 'startx' command and not lightdm. For the first launch,
    enter your credentials, then run the clone_wm script: ./clone_wm, on restart run startx
    and launch geany to read the README.md file: alt + g then g again.${nc}
    
    Bareboned:     ${y}Cinnamon, KDE Plasma, Mate & Xfce${nc}
    
EOF
    printf '%s\n'
    read -r -p "${g}"'    Press enter to launch desktop installation, ^C to quit: '"${nc}" inst
    case "$inst" in *) _CreateUser ;; esac
    
}

_CreateUser() {
    
    clear
    printf '%s\n'
    read -r -p "${g}"' First pick a new user name: '"${nc}" usrname
    useradd -m -G audio,video,input,wheel,sys,log,rfkill,lp,adm -s /bin/bash ${usrname}
    printf '%s\n' " ${g}Change $usrname password:${nc} "
    sleep 1s
    passwd ${usrname}
    printf '%s\n' " ${g}Enable $usrname sudo privileges in sudoers file:${nc} "
    sleep 2s
    EDITOR=vim visudo
    groupadd ${usrname}
    
    printf '%s\n'
    echo "${g} Set keyboard layout for $usrname: [F]rench (fr), [E]nglish (us):${nc}"
    read -r layout
    
    case "$layout" in
        e|E) KBD="us" ;;
        f|F) KBD="fr" ;;
    esac
    
    _DesktopChoice
    
}

_systemd() {
    
    clear
    printf '%s\n' " ${y}Installing LIGHTDM.${nc}"
    sleep 1s
    if [[ -d /usr/share/doc/bspwm ]]; then
    
        if [[ $(dmidecode -s system-product-name) = VirtualBox ]]; then
            pacman -S --needed --noconfirm virtualbox-guest-utils
            systemctl enable vboxservice.service
            printf '%s\n' " ${y}Rebooting, please wait...${nc}"
        fi
        
    else
    
        pacman -S --needed --noconfirm lightdm lightdm-gtk-greeter
        
        if [[ $(dmidecode -s system-product-name) = VirtualBox ]]; then
            pacman -S --needed --noconfirm virtualbox-guest-utils
            systemctl enable {lightdm,vboxservice}.service
            printf '%s\n' " ${y}Rebooting, please wait...${nc}"
        else
            systemctl enable lightdm.service
            printf '%s\n' " ${y}Rebooting, please wait...${nc}"
        fi
     fi
    
}

_audio() {
    
    clear
    printf '%s\n' " ${y}Installing AUDIO UTILITIES${nc}"
    sleep 1s
    pacman -S --needed --noconfirm alsa-utils pulseaudio \
    pulseaudio-alsa pulsemixer pavucontrol gst-libav \
    gst-plugins-{bad,base,good,ugly} wavpack
    
}

_fonts() {
    
    clear
    printf '%s\n' " ${y}Installing FONTS${nc}"
    sleep 1s
    pacman -S --needed --noconfirm noto-fonts ttf-font-awesome \
    ttf-bitstream-vera ttf-dejavu ttf-fira-code ttf-jetbrains-mono \
    ttf-hack ttf-ibm-plex ttf-liberation
    
}

_xorg() {
    
    clear
    printf '%s\n' " ${y}Installing XORG${nc}"
    sleep 1s
    pacman -Sy --needed --noconfirm xorg xorg-server xorg-xinit \
    xorg-xrandr xorg-xfontsel xorg-xlsfonts xorg-xkill xorg-xinput \
    xorg-xwininfo wmctrl xdg-user-dirs xterm xorg-apps xcb-util-wm
    
}

_i3wm() {
    
    _xorg \
    && clear && printf '%s\n' " ${y}Installing I3WM.${nc}"
    sleep 1s
    pacman -S --needed --noconfirm i3-wm i3lock i3status conky fzf dunst \
    i3blocks polybar dmenu rofi sxhkd rxvt-unicode alacritty htop scrot feh \
    gnome-keyring polkit-gnome zsh zsh-completions zsh-syntax-highlighting \
    powerline powerline-common powerline-fonts powerline-vim python-powerline \
    numlockx lxappearance geany geany-plugins network-manager-applet ranger \
    && _fonts && _audio && _systemd && curl -sL \
    "https://raw.githubusercontent.com/archusXIV/dotfiles/main/scripts/various/clone_wm" -O \
    && curl -sL "https://raw.githubusercontent.com/archusXIV/wm_config/main/README.md" -O \
    && chown ${usrname}:${usrname} clone_wm README.md \
    && mv {clone_wm,README.md} /home/${usrname} && chmod +x /home/${usrname}/clone_wm
    
}

_bspwm() {
    
    _xorg \
    && clear && printf '%s\n' " ${y}Installing BSPWM.${nc}"
    sleep 1s
    pacman -S --needed --noconfirm bspwm sxhkd xdo polybar dmenu fzf i3lock \
    rofi rxvt-unicode alacritty geany geany-plugins ranger htop conky scrot \
    gnome-keyring polkit-gnome zsh zsh-completions zsh-syntax-highlighting \
    powerline powerline-common powerline-fonts powerline-vim python-powerline \
    numlockx lxappearance network-manager-applet dunst feh \
    && _fonts && _audio && _systemd && curl -sL \
    "https://raw.githubusercontent.com/archusXIV/dotfiles/main/scripts/various/clone_wm" -O \
    && curl -sL "https://raw.githubusercontent.com/archusXIV/wm_config/main/README.md" -O \
    && chown ${usrname}:${usrname} clone_wm README.md \
    && mv {clone_wm,README.md} /home/${usrname} && chmod +x /home/${usrname}/clone_wm
    
}

_cinnamon() {
    
    _xorg \
    && clear && printf '%s\n' " ${y}Installing CINNAMON desktop.${nc}"
    sleep 1s
    pacman -S --needed --noconfirm cinnamon cinnamon-translations \
    nemo-fileroller nemo-image-converter nemo-preview xed xreader \
    gnome-terminal metacity gnome-shell network-manager-applet htop \
    && _fonts && _audio && _systemd
    
}

_kde() {
    
    _xorg \
    && clear && printf '%s\n' " ${y}Installing KDE PLASMA desktop.${nc}"
    sleep 1s
    pacman -S --needed --noconfirm plasma-meta kdialog packagekit-qt5 \
    kcalc icoutils libappimage konsole dolphin kdegraphics-thumbnailers \
    svgpart ffmpegthumbs kdenetwork-filesharing gwenview kimageformats \
    ark kate okular kcron kdf filelight print-manager kdeconnect sshfs htop \
    && _fonts && _audio && _systemd
    
}

_mate() {
    
    _xorg \
    && clear && printf '%s\n' " ${y}Installing MATE desktop.${nc}"
    sleep 1s
    pacman -S --needed --noconfirm mate mate-extra \
    network-manager-applet htop \
    && _fonts && _audio && _systemd
    
}

_xfce() {
    
    _xorg \
    && clear && printf '%s\n' " ${y}Installing XFCE4 desktop.${nc}"
    sleep 1s
    pacman -S --needed --noconfirm xfce4 xfce4-goodies \
    network-manager-applet htop \
    && _fonts && _audio && _systemd
    
}

_DesktopChoice() {
    
    clear
    printf '%s\n'
    printf '%s\n' " ${g}Desktop choice, eg: x for Xfce...${nc}"
    read -r -p "${g}"' [I]3-wm, [B]spwm, [C]innamon, [K]de Plasma, [M]ate, [X]fce: '"${nc}" choice
    case ${choice} in
        i|I) _i3wm     ;;
        b|B) _bspwm    ;;
        c|C) _cinnamon ;;
        k|K) _kde      ;;
        m|M) _mate     ;;
        x|X) _xfce     ;;
    esac
    
    exit
    
}

_Description "${@}"
