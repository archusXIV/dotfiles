#!/bin/bash

# COULEURS
Neutre='\e[0;m'
Vert='\e[1;32m'
Rouge='\e[0;31m'

progress() {
    str1=" Ce script permet l'installation de Archlinux en UEFI sur le premier disque détecté."
    str2=" Le partitionnement est fait à l'aide de cfdisk et n'est pas automatique"
    str3=" This script allows the installation of Archlinux in UEFI on the first disk detected."
    str4=" Partitioning is done using cfdisk and is not automatic"

    echo ""
    echo -e ${Vert}$str1
    echo -e ${Vert}$str2
    echo ""
    echo -e ${Vert}$str3
    echo -e ${Vert}$str4${Neutre}
    echo ""
    sleep 5s
}

erreur() {
    clear && echo ""
    echo -e "${Rouge} MACHINE NON UEFI""${Neutre}"
    echo ""  sleep 4s && exit 0
}

valider_usager() {
    date=$(date)
    usager=$(id -u)

    if [[ $usager == 0 ]]; then
        sed -i 's/#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf
        echo -e " ${Vert}Succès${Neutre} The script starts $date..."
        sleep 2s
        if [[ -n $(ls /sys/firmware/efi/efivars) ]]; then
            echo -e " ${Vert}Succès${Neutre} système UEFI présent!"
            sleep 2s
            timedatectl set-ntp true && timedatectl \
            && echo -e "${Vert} Succès""${Neutre} de la mise à l'heure du système."
            sleep 2s
            
            disque=$(lsblk -r | awk '/disk/{print $1}' | sed -n '1p')
            cfdisk /dev/$disque
            
            echo " ${Vert}Formatage et montage des partitions...${Neutre}"
            sleep 1s
            
            sda="/dev/$disque"
            a="1"
            b="2"
            c="3"
            mkfs.fat -F32 $sda$a && mkfs.ext4 $sda$b && mkfs.ext4 $sda$c
            mount $sda$b /mnt && mkdir -p /mnt/home && mount $sda$c /mnt/home \
            && mkdir -p /mnt/boot && mount $sda$a /mnt/boot && lsblk
            
            pays=$(curl --fail -s https://ipapi.co/country)
            echo -e " ${Vert}Récupération de la liste des mirroirs pour $pays${Neutre}"
            sleep 1s
            
            reflector -c "$pays" --latest 10 --age 24 --protocol https \
            --sort rate --save /etc/pacman.d/mirrorlist
            
            echo -e " ${Vert}Installation du système de base...${Neutre}"
            sleep 1s
            
            pacstrap /mnt base linux linux-firmware base-devel pacman-contrib \
            grub efibootmgr networkmanager zip unzip p7zip vi nano wget vim mc git \
            syslog-ng mtools dosfstools lsb-release ntfs-3g exfat-utils bash-completion \
            xf86-video-{amdgpu,ati,dummy,fbdev,intel,nouveau,openchrome,qxl,sisusb,vesa} \
            neofetch os-prober man-db man-pages
            
            echo " ${Vert}Génération de sftab...${Neutre}"
            genfstab -U -p /mnt >> /mnt/etc/fstab
            sleep 2s
            
            echo -e "${Vert} Renseignez le nom de la machine:${Neutre}"
            read machine
            timezone=$(curl --fail https://ipapi.co/timezone)
            arch-chroot /mnt /bin/bash -c "
                echo $machine > /etc/hostname \
                && echo KEYMAP=fr-latin9 > /etc/vconsole.conf \
                && echo FONT=eurlatgr >> /etc/vconsole.conf \
                && echo Choisissez vos locales && sleep 2 \
                && nano /etc/locale.gen \
                && locale-gen \
                && echo LANG=fr_FR.UTF-8 > /etc/locale.conf \
                && echo LC_COLLATE=C >> /etc/locale.conf
                
                echo 127.0.0.1    localhost >> /etc/hosts \
                echo ::1        localhost >> /etc/hosts \
                && echo 127.0.1.1    $machine.localdomain $machine >> /etc/hosts
                
                ln -sf /usr/share/zoneinfo/$timezone /etc/localtime
                
                hwclock --systohc --utc
                
                mkinitcpio -p linux
                
                echo Changer le mot de passe de $USER
                passwd $USER
                
                grub-install --target=x86_64-efi --efi-directory=/boot \
                --bootloader-id=GRUB && grub-mkconfig -o /boot/grub/grub.cfg
                
                systemctl enable NetworkManager
                exit
            "
            umount -R /mnt && reboot
        fi
    else
        erreur
        exit
    fi

}

progress
valider_usager
