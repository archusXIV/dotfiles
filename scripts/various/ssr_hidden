#!/usr/bin/env bash

# Author: Barret E 2024 <archus@protonmail.com>
# simple script to run simplescreenrecorder in hidden mode
# for the entered time & @screen. (see _usage function)
# input-profiles directory contains {all,center,left,right}.conf files.

ssr_fifo="$XDG_RUNTIME_DIR/ssr.fifo"
configs_path="$XDG_CONFIG_HOME/simplescreenrecorder/input-profiles"

_close() {
    unset IFS
    rm "$ssr_fifo"
    amixer set Capture,0 0%,0% mute nocap
    polybar-msg action "#mic-ipc.hook.0"
    clear
} >/dev/null 2>&1

_usage() {
    echo -e "\n Usage:   ${0##*/} -d duration -p profile"
    echo "             duration = hh:mm:ss"
    echo " Example: ${0##*/} -d 00:15:30 -p {profile1,profile2,etc...}"
    echo -e " or:      ${0##*/} -d 15:30 -p {profile1,profile2,etc...}\n"
    echo " Profile(s) should be in $configs_path"
    [[ -p "$ssr_fifo" ]] && _close
    exit 1
}

[[ $# -ne 4 ]] && {
    printf '\n%s\n' " Missing arguments..."
    _usage
}

amixer set Capture,0 80%,80% unmute cap >/dev/null 2>&1
polybar-msg action "#mic-ipc.hook.1" >/dev/null 2>&1

_timeConversion() {
    convertString="$1"
    IFS=":";
    if [[ ${#convertString} -eq 5 && $convertString =~ ':' ]]; then
        # five characters (01:30)
        read -r minutes seconds <<< "$convertString"
        totalSeconds=$((minutes * 60 + seconds))
    elif [[ ${#convertString} -eq 8 && $convertString =~ ':' ]]; then
        # eight characters (01:20:30)
        read -r hours minutes seconds <<< "$convertString"
        totalSeconds=$(((hours * 3600) + (minutes * 60 + seconds)))
    else
        printf '\n%s\n' " Wrong duration syntax..."
        _close; _usage
    fi
    unset IFS
}

# getting user input according to _usage function.
while getopts d:p: opt; do
    case "${opt}" in
        d) duration=${OPTARG} ;;
        p)
            profile=${OPTARG}
            if [[ -z $(find "$configs_path" -name "$profile.*") ]]; then
                printf '\n%s\n' " profile $profile does not exist!"
                _close; _usage
            fi
        ;;
        *) _usage ;;
    esac
done

_timeConversion "$duration"

if [[ -p "$ssr_fifo" ]]; then
    rm "$ssr_fifo" && mkfifo "$ssr_fifo"
else
    mkfifo "$ssr_fifo"
fi

# ssr commands
simplescreenrecorder \
    --start-hidden \
    --settingsfile="$configs_path/$profile.conf" < "$ssr_fifo" &

exec 4> "$ssr_fifo"; sleep 1
echo "record-start" >&4; sleep "$totalSeconds"
echo "record-save" >&4; sleep 1
echo "quit" >&4; exec 4>&-

_close; exit
