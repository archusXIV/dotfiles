#!/bin/bash
## This is a part of main script: mpv-menu.

_save_remove() {

    cd "$playlists_dir"
    clear
    read -rsn 1 -p 'Save [s] or Remove [r] a playlist?: ' opt
    echo ""

    case "$opt" in
        s)  echo -e " ${green}Available playlists:\n${nocolor}"
            find . -name "*.m3u" -o -name "*.m3u_origin" | sort -d | sed 's,.*/,,'
            echo ""
            echo -e " ${green}Save playlist as:\n${nocolor}"
            read -r list
            list="$list.m3u"
            if [[ $(find . -name "${list}") ]]; then
                echo -e " ${red}This playlist already exists!\n Overwrite $list? [y/N]:${nocolor}"
                read -r overwrite
                case "$overwrite" in
                    y|Y)    cp -f "$QUEUE" "$list"
                            echo " ${green}$list saved ${nocolor}"
                            sleep 3s
                            _check_queue ;;
                    N|n)    _check_queue ;;
                    *  )    _check_queue ;;
                esac
            else
                cp "$QUEUE" "$list"
                echo " ${green}$list saved ${nocolor}"
                sleep 2s
                _check_queue
            fi ;;
        r)  PS3=""
            echo -e " ${green}Which playlist do you want to remove? \n${nocolor}"
            select list in $(find . -name "*.m3u" -o -name "*.m3u_origin" | sort -d | sed 's,.*/,,'); do
                echo ""
                echo " ${red}Are you sure you want to remove $list? [y/N]:${nocolor}"
                read -r del
                case "$del" in
                    y|Y)    rm "$list"
                            echo " ${red}$list removed ${nocolor}"
                            sleep 3s
                            _menu ;;
                    N|n)    _menu ;;
                    *  )    echo " ${red} Wrong option! Wait and try again...${nocolor}"
                            sleep 3s
                            _menu ;;
                esac
            done ;;
        *)  echo " ${red} Wrong option! Wait and try again...${nocolor}"
            sleep 3s
            _menu ;;
    esac

}

_delete_url() {
    if (( $(grep "" -c "$QUEUE") < 2 )); then
        echo " ${green}There is nothing to do, main list is empty...${nocolor}"
        sleep 3s
        _menu
    else
        echo ""
        sed -i '/https/d' "$QUEUE"
        _clean_tmp_dir
        echo " ${red}All urls removed.${nocolor}"
        sleep 3s
        _menu
    fi
}

_remove_crap() {

    # After some tests it appears that a single link copied from a youtube playlist
    # causes the download of the entire playlist.
    # So with the help of sed we cleanup the link to get the direct link to the desired video.
    # Note that this behavior does not appear during a simple viewing/listening.

    [[ -n $(grep -e '&list' "$QUEUE") ]] && {
        echo " ${red}Cleaning entries...${nocolor}"
        sleep 2s
        sed -i 's/&.*//' "$QUEUE"
    }

    # Let's remove possible duplicates using regex.
    [[ -n $(uniq -d "$QUEUE") ]] && {
        echo " ${red}Removing double entries...${nocolor}"
        sleep 2s
        sed -i -n \
        'G; s/\n/&&/; /^\([ -~]*\n\).*\n\1/d; s/\n//; h; P' \
        "$QUEUE"
    }

    # Let's remove possible empty lines.
    sed -i '/^\s*$/d' "$QUEUE"

}
