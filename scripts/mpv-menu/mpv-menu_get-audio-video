#!/bin/bash
## This is a part of main script: mpv-menu.

_get_audio() {

    cd "$audios_dir"
        
    if [[ $(grep -e 'playlist?list=' "$queue") ]]; then
        echo ""
        echo -e " ${green}Getting youtube playlist availability...please wait.${nocolor}\n"
        while read -r line; do
            youtube-dl -j "$line" \
            | jq '(.webpage_url)' \
            | cat | sed 's/"//g' >> "$tmp_dir"/urls.txt
        done < <(cat "$queue" | sed '/#EXTM3U/d')
        cat "$tmp_dir"/urls.txt >> "$queue"
        sed -i '2d' "$queue"
    fi
    
    for url in $(grep 'https' "$queue"); do
        
        local getaudiotitle
        getaudiotitle=$(youtube-dl -j "$url" | jq '(.title)')
    
        if (( $(sed '/#EXTM3U/d' "$queue" | wc -l) < 2 )); then
            echo ""
            echo " ${green}There is" "$(sed '/#EXTM3U/d' "$queue" | wc -l)" "audio file left to download.${nocolor}"
        else
            echo ""
            echo " ${green}There are" "$(sed '/#EXTM3U/d' "$queue" | wc -l)" "audio files left to download.${nocolor}"
        fi

        youtube-dl -F "$url" | grep -e 'audio only' | sed 's/audio only      //'
        echo ""
        echo " ${green}Choose a format code: ${nocolor}"
        read -r code
        
        echo " ${green}Please be patient while downloading ${red}$getaudiotitle...${nocolor}"
        sleep 2s
        youtube-dl -f "$code" "$url" > "$ytop"
        sed -i '2d' "$queue"
        clear

    done

    echo -e " ${green}Done\n${nocolor}"

    if [[ -n $(find . -iname "*.webm") ]]; then
        echo " ${green}Please be patient while ffmpeg is working...${nocolor}"
        find . -iname "*.webm" -exec \
        bash -c 'FILE="$1"; \
        ffmpeg -i "${FILE}" \
        -vn -ab 320k -ar 48000 \
        -y "${FILE%.webm}.mp3";' _ '{}' \; 2>"$ffop"

        echo " ${green}Done${nocolor}"
        sleep 2s
        rm ./*.webm
        rm "$tmp_dir"/*.txt
        _menu
    else
        rm "$tmp_dir"/*.txt
        _menu
    fi

}

_get_video() {

    cd "$videos_dir"

    local getvideotitle webm
    

    if [[ $(grep -e 'playlist?list=' "$queue") ]]; then
        echo ""
        echo -e " ${green}Getting youtube playlist availability...please wait.${nocolor}\n"
        while read -r line; do
            youtube-dl -j "$line" \
            | jq '(.webpage_url)' \
            | cat | sed 's/"//g' >> "$tmp_dir"/urls.txt
        done < <(cat "$queue" | sed '/#EXTM3U/d')
        cat "$tmp_dir"/urls.txt >> "$queue"
        sed -i '2d' "$queue"
    fi
    
    for url in $(grep 'https' "$queue"); do

        getvideotitle=$(youtube-dl -j "$url" | jq '(.title)')
        
        youtube-dl -F "$url"
        echo ""
        echo " ${green}Choose a format code: ${nocolor}"
        read -r code
        echo "$code" > "$ytop"
        sleep 0.5
        
        echo " ${green}Please be patient while downloading ${red}$getvideotitle...${nocolor}"
        sleep 2s
        
        if (( $(sed '/#EXTM3U/d' "$queue" | wc -l) < 2 )); then
            echo ""
            echo " ${green}There is" "$(sed '/#EXTM3U/d' "$queue" | wc -l)" "video file left to download.${nocolor}"
        else
            echo ""
            echo " ${green}There are" "$(sed '/#EXTM3U/d' "$queue" | wc -l)" "video files left to download.${nocolor}"
        fi

        if [[ $(grep -e '+' "$ytop") ]]; then
            youtube-dl -f "$code" --merge-output-format mp4 "$url" > "$ytop"
        else
            youtube-dl -f "$code" "$url" > "$ytop"
        fi
        
        sed -i '2d' "$queue"
        clear

    done

    echo -e " ${green}Done.\n${nocolor}"

    webm="$(find . -name '*.webm' | sed 's,.*/,,')"
    
    if [[ -n ${webm} ]]; then
        echo " ${green}Please be patient while ffmpeg is working...${nocolor}"
        ffmpeg -i "$webm" "$webm".mp4 2>$ffop
        echo " ${green}All done${nocolor}"
        sleep 2s
        rm ./*.webm
        rm "$tmp_dir"/*.txt
        _menu
    else
        rm "$tmp_dir"/*.txt
        _menu
    fi

}
