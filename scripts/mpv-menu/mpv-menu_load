#!/bin/bash
## This is a part of main script: mpv-menu.

_get_mpv_title() {
    # mpv --idle --really-quiet --input-ipc-server=/tmp/mpvsocket
    while [[ -n $(pidof mpv) ]]; do
        echo '{ "command": ["get_property", "force-media-title"] }' \
        | socat - /tmp/mpvsocket | awk -F '"' '{print $4}' > $metadatas
        echo " ${green}Now playing: " "${nocolor}$(tail -n 1 $metadatas)"
        sleep 2s
        clear
    done

}

_stop_mpvipc() {
    
    [[ $(systemctl --user list-units | awk '/mpv-ipc/{print $3}') == 'active' ]] \
    && systemctl --user stop mpv-ipc.service

}

_load_audio() {

    _stop_mpvipc

    mpvc -a -Q "$queue"
   _get_mpv_title

    rm $metadatas
    clear
    _menu

}

_load_video() {

    _stop_mpvipc
    picom &

    mpvc -a "$queue"
    _get_mpv_title

    killall -q picom
    rm $metadatas
    clear
    _menu

}

_load_playlist() {

    cd "$playlists_dir"

    PS3="Select a playlist to load (Press 'q' to quit mpv): "
    select list in $(find . -name "*.m3u" | sort -d | sed 's,.*/,,'); do

        if (( $(grep "" -c "$list") == 0 )); then
            echo " ${red}$list list is empty...${nocolor}"
            sleep 3s
            break
        fi

        echo ""
        read -rsn 1 -p 'Just load [l] download audio [a] or download video [v] (Press '^C' to quit youtube-dl): ' letter
        case "$letter" in
            a)  cp "$list" "$list"_origin
                _download_audio
            ;;
            l)  # _stop_mpvipc
                echo ""
                read -rsn 1 -p 'Load audio [a] or video [v] ?: ' load
                case "$load" in
                    a)  mpvc -a -Q "$list"
                        #_get_mpv_title
                    ;;
                    v)  # picom &
                        mpvc -a "$list"
                        #_get_mpv_title # && killall -q picom
                    ;;
                    *)  echo -e " ${red} Wrong option! Wait and try again...${nocolor}"
                        sleep 3s
                    ;;
                esac

                rm "$metadatas"
                clear
                _menu
            ;;
            v)  cp "$list" "$list"_origin
                _download_video
            ;;
            *)  echo " ${red} Wrong option! Wait and try again...${nocolor}"
                sleep 3s
            ;;
        esac

    done

    clear
    _menu

}

_load_local() {
    local VIDEOS="$HOME/Documents/Videos/"

    read -rp 'What would you like to load, a directory [d] or file(s) [f] ?: ' answer

    case "$answer" in
        d)  PS3="Select a directory to queue in mpv: "
            select dir in $(find "$VIDEOS" -maxdepth 1 | sed 's,.*/,,'); do
                if [[ $(find "$VIDEOS"/"$dir" -type d -empty) ]]; then
                    echo " ${red}$dir is empty. Wait and try again...${nocolor}"
                    sleep 3s
                    break
                else
                    mpvc add "$VIDEOS"/"$dir"/* >/dev/null 2>&1
                    [[ -z $(pidof mpv) ]] && {
                        echo " ${red}$dir might be a broken link or points to an empty directory.${nocolor}"
                        sleep 5s
                        break
                    }
                    echo " ${green}$dir added to the mpv playlist.${nocolor}"
                    sleep 3s
                    break
                fi
            done
            _menu
        ;;
        f)  ranger "$VIDEOS"; _menu
        ;;
        *)  echo " ${red} Wrong option! Wait and try again...${nocolor}"
            sleep 3s
        ;;
    esac
}
