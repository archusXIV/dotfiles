#!/bin/bash
## This is a part of main script: mpv-menu.

_stop_mpvipc() {
    [[ $(systemctl --user list-units | awk '/mpv-ipc/{print $3}') == 'active' ]] \
        && systemctl --user stop mpv-ipc.service
}

_load_audio() {
    # _stop_mpvipc
    mpvc -a -Q "$queue"
   #_get_mpv_title
    #rm "$metadatas"
    clear
    _menu
}

_load_video() {
    # _stop_mpvipc
    mpvc -a "$queue"
    #_get_mpv_title
    #rm "$metadatas"
    clear
    _menu
}

_load_playlist() {

    cd "$playlists_dir"
    
    PS3=""
    echo -e " ${green}Select a playlist to load (Press 'q' to quit mpv):\n${nocolor}"
    select list in $(find . -name "*.m3u" | sort -d | sed 's,.*/,,'); do
        
        if ! grep -q -e 'https' -e 'http' "$list"; then
            echo " ${red}$list is empty...${nocolor}"
            sleep 3s
            break
        fi
        
        # $list may also contain a {playlist url}, so let's extract videos from,
        # remove {playlist url} and grab videos' titles.(in the second while loop).
        if [[ $(grep -e 'playlist?list=' "$list") ]]; then
            echo ""
            echo -e " ${green}Checking youtube playlist availability...please wait.${nocolor}\n"
            rm "$tmp_dir"/urls.txt >/dev/null 2>&1
            
            while read -r line; do
                youtube-dl -j "$line" \
                | jq '(.webpage_url)' \
                | cat | sed 's/"//g' >> "$tmp_dir"/urls.txt
            done < <(cat "$list" | sed '/#EXTM3U/d')
            
            cat "$tmp_dir"/urls.txt >> "$list"
            # Cleaning $list...
            sed -i '/playlist/d' "$list"
            sed -i -n 'G; s/\n/&&/; /^\([ -~]*\n\).*\n\1/d; s/\n//; h; P' "$list"
        fi

        echo -e " ${green}Getting videos titles...please wait.${nocolor}\n"
        rm "$tmp_dir"/titles.txt >/dev/null 2>&1
        
        while read -r line; do
            youtube-dl -j "$line" \
            | jq '(.title)' >> "$tmp_dir"/titles.txt
        done < <(cat "$list" | sed '/#EXTM3U/d')
        
        cat -n "$tmp_dir"/titles.txt
        echo ""
        
        echo -e " ${green}Just load [l] download audio [a] or download video [v] \n (Press '^C' to quit youtube-dl):${nocolor} "
        read -rsn 1 letter
        case "$letter" in
            a)  _download_audio ;;
            l)  # _stop_mpvipc
                echo ""
                read -rsn 1 -p  ${green}' Load audio [a] or video [v] ?: '${nocolor} load
                case "$load" in
                    a)  mpvc -a -Q "$list" ;;
                    v)  mpvc -a "$list" ;;
                    *)  echo " ${red} Wrong option! Wait and try again...${nocolor}"
                        sleep 3s ;;
                esac

                rm "$tmp_dir"/*.txt >/dev/null 2>&1
                clear
                _menu ;;
            v)  _download_video ;;
            *)  echo " ${red} Wrong option! Wait and try again...${nocolor}"
                sleep 3s ;;
        esac

    done

    clear
    _menu

}

_load_local() {
    local VIDEOS="$HOME/Documents/Videos/"

    echo -e " ${green}What would you like to load, a directory [d] or file(s) [f] ?: ${nocolor}\n"
    read -rsn 1 answer

    case "$answer" in
        d)  PS3=" Select a directory to queue in mpv: "
            select dir in $(find "$VIDEOS" -maxdepth 1 | sed 's,.*/,,'); do
                if [[ $(find "$VIDEOS"/"$dir" -type d -empty) ]]; then
                    echo " ${red}$dir is empty. Wait and try again...${nocolor}"
                    sleep 3s
                    break
                else
                    mpvc add "$VIDEOS"/"$dir"/* >/dev/null 2>&1
                    [[ -z $(pidof mpv) ]] && {
                        echo " ${red}$dir might be a broken link or points to an empty directory.${nocolor}"
                        sleep 5s
                        break
                    }
                    echo " ${green}$dir added to the mpv playlist.${nocolor}"
                    sleep 3s
                    break
                fi
            done
            _menu ;;
        f)  ranger "$VIDEOS"; _menu ;;
        *)  echo " ${red} Wrong option! Wait and try again...${nocolor}"
            sleep 3s ;;
    esac
}
