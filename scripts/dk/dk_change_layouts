#!/bin/bash

# Author: Barret E <archus@protonmail.com>
# 2024-06-14
# Dependencies: jq wmctrl
#
# Scenario:
#    Three monitors setup.
#    This script change focused workspace layout and toggles monocle/previous layout.
#    A polybar module is triggered and let us know if we are in static/dynamic mode,
#    of course workspaces indicators are renamed as we change layouts (1:G,2:R,3:T etc...)
#    Uppercase letters meaning:
#    A=dwindle,D=dyntile,G=grid,M=mono,N=none,R=rtile,S=spiral,T=tile,W=tstack

# shellcheck disable=SC2049,SC2076
DKRC="$HOME/.config/dk/dkrc"
NWSN="$XDG_CACHE_HOME/new_ws_names"
FDL="$XDG_CACHE_HOME/focused_desktop_layout"

_ApplyNewWsNames() {
    n=1
    while read -r line; do
        dkcmd set ws="$n" name="$line"
        ((n++))
    done < "$NWSN"
    unset line
    rm "$NWSN"
}

_SetNewFocusedName() {
    wmctrl -d | while read -r line; do
        if [[ $line =~ '*' ]]; then
            echo "$line" \
            | sed "s/[A-Z]/${SYMBOL}/g;s/.*\s//" >> "$NWSN"
        else
            echo "$line" | awk '{print $NF}' >> "$NWSN"
        fi
    done
    unset line
}

_TriggerNewNames() {
    _SetNewFocusedName
    _ApplyNewWsNames
}

# a mode indicator in polybar
_BarStatic() {
    polybar-msg -p $(pgrep --full dk-bar-3) \
    action "#static_ws-ipc.hook.${hooknum}" >/dev/null 2>&1
}

_ChangeMode() {
    local hooknum
    case "$1" in
        --default)
            "$DKRC"
            hooknum=1
            _BarStatic
            notify-send 'dk static mode'
        ;;
        --dynamic)
            dkcmd set static_ws=false
            hooknum=0
            _BarStatic
            notify-send 'dk dynamic mode'
        ;;
        --static)
            dkcmd set static_ws=true
            hooknum=1
            _BarStatic
            notify-send 'dk static mode'
        ;;
    esac
}

currentModeFalse=$(dkcmd status type=full num=1 | grep 'static_ws":false')
currentModeTrue=$(dkcmd status type=full num=1 | grep 'static_ws":true')

_GetMode() {
    
    if [[ $currentModeFalse ]]; then
        
        if grep -qF 'static_ws=true' "$DKRC"; then
            
            wmctrl -d | awk '{print $NF}' > "$NWSN"
            mapfile -t prevWsLayouts < <(
                dkcmd status type=ws num=1 \
                | jq -r '.workspaces | .[] | .layout'
            )
            _ChangeMode --default
            _ApplyNewWsNames
            
            wsn=1
            for wslayout in "${prevWsLayouts[@]}"; do
                dkcmd set ws="$wsn" layout "$wslayout"
                ((wsn++))
                sleep 0.1
            done
            unset prevWsLayouts
        else
            # workspaces will not be ordered if not already.
            _ChangeMode --static
        fi
    elif [[ $currentModeTrue ]]; then
        _ChangeMode --dynamic
    fi
}

_SetLayout() { dkcmd set layout "$1"; }

_ToggleMono() {
    if [[ ! -f $FDL ]]; then
        dkcmd status type=layout num=1 \
        | jq '.[]' | sed 's/"//g' > "$FDL"
        _SetLayout mono
        SYMBOL="M"
        _TriggerNewNames
    else
        dkcmd win focus last 2>/dev/null
        _SetLayout "$(cat "$FDL")"
        if [[ $(cat "$FDL") = tstack ]]; then
            SYMBOL="W"
        else
            SYMBOL=$(sed 's/./\U&/;s/[[:lower:]]//g' < "$FDL")
        fi
        _TriggerNewNames
        rm "$FDL"
    fi
}
# 9 available layouts, toggle {mono/last,static/dynamic}
case "$1" in
    alternate) SYMBOL="A"; _SetLayout dwindle && _TriggerNewNames ;;
    dyntile  ) SYMBOL="D"; _SetLayout dyntile && _TriggerNewNames ;;
    grid     ) SYMBOL="G"; _SetLayout grid && _TriggerNewNames ;;
    none     ) SYMBOL="N"; _SetLayout none && _TriggerNewNames ;;
    rtile    ) SYMBOL="R"; _SetLayout rtile && _TriggerNewNames ;;
    spiral   ) SYMBOL="S"; _SetLayout spiral && _TriggerNewNames ;;
    tile     ) SYMBOL="T"; _SetLayout tile && _TriggerNewNames ;;
    tstack   ) SYMBOL="W"; _SetLayout tstack && _TriggerNewNames ;;
    mono     ) _ToggleMono ;;
    false    ) _GetMode ;;
    static   ) _ChangeMode --static ;;
    dynamic  ) _ChangeMode --dynamic ;;
esac
