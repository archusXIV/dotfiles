#!/bin/bash

# Author: Barret E <archus@protonmail.com>
# This script change focused workspace layout and toggles monocle/previous layout.
# A polybar module is triggered and let us know if we are in static/dynamic mode,
# of course workspaces indicators are renamed as we change layouts (1:G,2:R,3:T etc...)
# Uppercase letters meaning:
# D=dwindle,G=grid,M=mono,N=none,R=rtile,S=spiral,T=tile,W=tstack

# shellcheck disable=SC2049,SC2076
DKRC="$HOME/.config/dk/dkrc"
NL="$XDG_CACHE_HOME/new_layouts"
FDL="$XDG_CACHE_HOME/focused_desktop_layout"

_ApplyLayouts() {
    n=1
    while read -r line; do
        dkcmd set ws="$n" name="$line"
        ((n++))
    done < "$NL"
    rm "$NL"
}

_DefineWorkspaces() {
    # xrandr | grep -w 'connected' | awk '{print $1}'
    # these are environment variables
    MONITOR1='DVI-D-0'
    MONITOR2='HDMI-0'
    MONITOR3='DP-0'
    # we have to reset our workspaces names before applying new changes.
    case "$1" in
        --dynamic)
            dkcmd set \
                ws=1 name=1 ws=2 name=2 ws=3 name=3 \
                ws=4 name=4 ws=5 name=5 ws=6 name=6 \
                ws=7 name=7 ws=8 name=8 ws=9 name=9
            _ApplyLayouts
            ;;
        --static)
            dkcmd set \
                ws=1 name='1:G' mon=$MONITOR1 ws=2 name='2:R' mon=$MONITOR1 ws=3 name='3:R' mon=$MONITOR1 \
                ws=4 name='4:R' mon=$MONITOR2 ws=5 name='5:R' mon=$MONITOR2 ws=6 name='6:R' mon=$MONITOR2 \
                ws=7 name='7:M' mon=$MONITOR3 ws=8 name='8:R' mon=$MONITOR3 ws=9 name='9:R' mon=$MONITOR3
            _ApplyLayouts
            ;;
    esac
}

_NewLayouts() {
    wmctrl -d | while read -r line; do
        if [[ $line =~ '*' ]]; then
            echo "$line" \
            | sed "s/[A-Z]/${LAYOUT}/g" \
            | awk '{print $NF}' >> "$NL"
        else
            echo "$line" | awk '{print $NF}' >> "$NL"
        fi
    done
    unset line
}

currentModeFalse=$(dkcmd status type=full num=1 | grep 'static_ws":false')
currentModeTrue=$(dkcmd status type=full num=1 | grep 'static_ws":true')

_UpdateLayouts() {
    if [[ $currentModeFalse ]]; then
        _NewLayouts
        _DefineWorkspaces --dynamic
    elif [[ $currentModeTrue ]]; then
        _NewLayouts
        _DefineWorkspaces --static
    fi
}

# a mode indicator in polybar
_BarStatic() {
    case "$1" in
        --true)
            polybar-msg -p $(pgrep --full dk-bar-3) \
            action "#static_ws-ipc.hook.0" >/dev/null 2>&1
        ;;
        --false)
            polybar-msg -p $(pgrep --full dk-bar-3) \
            action "#static_ws-ipc.hook.1" >/dev/null 2>&1
        ;;
    esac
}

_GetCurrentLayouts() {
    dkcmd status type=ws num=1 | jq '.[]' \
    | awk '/layout/{gsub(/"/,""); sub(/,/,""); print $2}'
}

_ChangeMode() {
    if [[ $currentModeFalse ]]; then
        
        if grep -qF --no-ignore-case 'static_ws=true' "$DKRC"; then
            "$DKRC"
            _BarStatic --true
            notify-send 'dk static mode'
        else
            dkcmd set static_ws=true
            notify-send 'dk static mode'
        fi
        
    elif [[ $currentModeTrue ]]; then
        
        dkcmd set static_ws=false
        _BarStatic --false
        notify-send 'dk dynamic mode'
        
    fi
}

_SetLayout() { dkcmd set layout "$1"; }

_ToggleMono() {
    if [[ ! -f $FDL ]]; then
        
        dkcmd status type=layout num=1 | jq '.[]' | sed 's/"//g' > "$FDL"
        
        _SetLayout mono
        LAYOUT="M"
        _UpdateLayouts
        
    else
        
        dkcmd win focus last 2>/dev/null
        _SetLayout "$(cat "$FDL")"
        
        LAYOUT=$(
            sed '
                s/dwindle/D/g;s/grid/G/g;s/mono/M/g;s/none/N/g;
                s/rtile/R/g;s/spiral/S/g;s/tile/T/g;s/tstack/W/g
            ' < "$FDL")
            
        rm "$FDL"
        _UpdateLayouts
        
    fi
}

case "$1" in
    dwindle) LAYOUT="D"; _SetLayout dwindle && _UpdateLayouts ;;
    false  ) _ChangeMode ;;
    grid   ) LAYOUT="G"; _SetLayout grid && _UpdateLayouts ;;
    toggle ) _ToggleMono && _UpdateLayouts ;;
    none   ) LAYOUT="N"; _SetLayout none && _UpdateLayouts ;;
    rtile  ) LAYOUT="R"; _SetLayout rtile && _UpdateLayouts ;;
    spiral ) LAYOUT="S"; _SetLayout spiral && _UpdateLayouts ;;
    tile   ) LAYOUT="T"; _SetLayout tile && _UpdateLayouts ;;
    tstack ) LAYOUT="W"; _SetLayout tstack && _UpdateLayouts ;;
esac
