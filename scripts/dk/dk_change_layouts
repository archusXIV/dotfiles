#!/bin/bash

# Author: Barret E <archus@protonmail.com>
# 2024-06-14
# Dependencies: jq wmctrl
#
# Three monitors setup.
# This script change focused workspace layout and toggles monocle/previous layout.
# A polybar module is triggered and let us know if we are in static/dynamic mode,
# of course workspaces indicators are renamed as we change layouts (1:G,2:R,3:T etc...)
# Uppercase letters meaning:
# A=dwindle,D=dyntile,G=grid,M=mono,N=none,R=rtile,S=spiral,T=tile,W=tstack

# shellcheck disable=SC2049,SC2076
DKRC="$HOME/.config/dk/dkrc"
NWN="$XDG_CACHE_HOME/new_ws_names"
FDL="$XDG_CACHE_HOME/focused_desktop_layout"

_ApplyNewWsNames() {
    n=1
    while read -r line; do
        dkcmd set ws="$n" name="$line"
        ((n++))
    done < "$NWN"
    rm "$NWN"
}

_ResetWsOrder() {
    # xrandr | grep -w 'connected' | awk '{print $1}'
    # these are environment variables
    MONITOR1='DVI-D-0'
    MONITOR2='HDMI-0'
    MONITOR3='DP-0'
    # we have to reset our workspaces names and order before applying new changes.
    case "$1" in
        --dynamic)
            dkcmd set \
            ws=1 name=1 ws=2 name=2 ws=3 name=3 \
            ws=4 name=4 ws=5 name=5 ws=6 name=6 \
            ws=7 name=7 ws=8 name=8 ws=9 name=9
        ;;
        --static)
            dkcmd set \
            ws=1 mon=$MONITOR1 ws=2 mon=$MONITOR1 ws=3 mon=$MONITOR1 \
            ws=4 mon=$MONITOR2 ws=5 mon=$MONITOR2 ws=6 mon=$MONITOR2 \
            ws=7 mon=$MONITOR3 ws=8 mon=$MONITOR3 ws=9 mon=$MONITOR3
        ;;
    esac
}

_SetNewWsNames() {
    wmctrl -d | while read -r line; do
        if [[ $line =~ '*' ]]; then
            echo "$line" \
            | sed "s/[A-Z]/${LAYOUT}/g" \
            | awk '{print $NF}' >> "$NWN"
        else
            echo "$line" | awk '{print $NF}' >> "$NWN"
        fi
    done
    unset line
}

currentModeFalse=$(dkcmd status type=full num=1 | grep 'static_ws":false')
currentModeTrue=$(dkcmd status type=full num=1 | grep 'static_ws":true')

_TriggerNewNames() {
    if [[ $currentModeFalse ]]; then
        _SetNewWsNames
        _ResetWsOrder --dynamic
        _ApplyNewWsNames
    elif [[ $currentModeTrue ]]; then
        _SetNewWsNames
        _ResetWsOrder --static
        _ApplyNewWsNames
    fi
}
# a mode indicator in polybar
_BarStatic() {
    case "$1" in
        --true)
            polybar-msg -p $(pgrep --full dk-bar-3) \
            action "#static_ws-ipc.hook.0" >/dev/null 2>&1
        ;;
        --false)
            polybar-msg -p $(pgrep --full dk-bar-3) \
            action "#static_ws-ipc.hook.1" >/dev/null 2>&1
        ;;
    esac
}

_ChangeMode() {
    case "$1" in
        --default)
            "$DKRC"
            _BarStatic --true
            notify-send 'dk static mode'
        ;;
        --dynamic)
            dkcmd set static_ws=false
            _BarStatic --false
            notify-send 'dk dynamic mode'
        ;;
        --static)
            dkcmd set static_ws=true
            _BarStatic --true
            notify-send 'dk static mode'
        ;;
    esac
}

_GetMode() {
    if [[ $currentModeFalse ]]; then
        if grep -qF --no-ignore-case 'static_ws=true' "$DKRC"; then
            _ChangeMode --default
        else
            # workspaces will not be ordered if not already.
            _ChangeMode --static
        fi
    elif [[ $currentModeTrue ]]; then
        _ChangeMode --dynamic
    fi
}

_SetLayout() { dkcmd set layout "$1"; }

_ToggleMono() {
    if [[ ! -f $FDL ]]; then
        dkcmd status type=layout num=1 \
        | jq '.[]' | sed 's/"//g' > "$FDL"
        _SetLayout mono
        LAYOUT="M"
        _TriggerNewNames
    else
        dkcmd win focus last 2>/dev/null
        _SetLayout "$(cat "$FDL")"
        LAYOUT=$(sed 's/./\U&/;s/[[:lower:]]//g' < "$FDL")
        _TriggerNewNames
        rm "$FDL"
    fi
}
# 9 available layouts, toggle {mono/last,static/dynamic}
case "$1" in
    alternate) LAYOUT="A"; _SetLayout dwindle && _TriggerNewNames ;;
    dyntile  ) LAYOUT="D"; _SetLayout dyntile && _TriggerNewNames ;;
    grid     ) LAYOUT="G"; _SetLayout grid && _TriggerNewNames ;;
    none     ) LAYOUT="N"; _SetLayout none && _TriggerNewNames ;;
    rtile    ) LAYOUT="R"; _SetLayout rtile && _TriggerNewNames ;;
    spiral   ) LAYOUT="S"; _SetLayout spiral && _TriggerNewNames ;;
    tile     ) LAYOUT="T"; _SetLayout tile && _TriggerNewNames ;;
    tstack   ) LAYOUT="W"; _SetLayout tstack && _TriggerNewNames ;;
    false    ) _GetMode ;;
    static   ) _ChangeMode --static ;;
    dynamic  ) _ChangeMode --dynamic ;;
    mono     ) _ToggleMono && _TriggerNewNames ;;
esac
