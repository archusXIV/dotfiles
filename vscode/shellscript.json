// Shell scripts snippets
{
	"myShebang": {
		"prefix": "myb",
		"body": [
			"#!/bin/bash",
			"## This is a part of main script: mpm.",
			"",
			"# shellcheck disable=SC2154"
		],
		"description": "myShebang"
	},
	"myCaseStatement": {
		"prefix": "myc",
		"body": [
			"case \"$${1:var}\" in",
			"    ${2:opt1})",
			"        ${3:command1}",
			"    ;;",
			"    ${4:opt2})",
			"        ${5:command2}",
			"    ;;",
			"    ${6:*)}",
			"        ${7:command3}",
			"    ;;",
			"esac"
		],
		"description": "myCaseStatement"
	},
	"myDeclareArray": {
  		"prefix": "myd",
  		"body": [
    		"declare -a ${1:arrayName}=(",
    		"    ${2:\"index1\"}",
    		"    ${3:\"index2\"}",
    		"    ${4:\"index3\"}",
    		"    ${5:\"index4\"}",
    		")"
  		],
  		"description": "myDeclareArray"
	},
	"myDeclareLoop": {
		"prefix": "mydl",
		"body": [
			"declare -a ${1:arrayName}=(",
    		"    ${2:\"index1\"}",
    		"    ${3:\"index2\"}",
    		"    ${4:\"index3\"}",
    		"    ${5:\"index4\"}",
			"    ${6:\"index5\"}",
    		")\n",
			"for ${7:var} in \"${$1[@]}\"; do",
			"    ${8:command} \"$$7\"",
			"done"
		],
		"description": "myDeclareLoop"
	},
	"myElif": {
		"prefix": "myei",
		"body": [
			"if [[ ${1:condition1} ]]; then",
			"    ${2:command1}",
			"elif [[ ${3:condition2} ]]; then",
			"    ${4:command2}",
			"else",
			"    ${5:command3}",
			"fi"
		],
		"description": "myElif"
	},
	"myForArray": {
		"prefix": "myfa",
		"body": [
			"for ${1:var} in \"${${2:arrayName}[@]}\"; do",
			"    ${3:command} \"$$1\"",
			"done"
		],
		"description": "myForArray"
	},
	"myForInt": {
  		"prefix": "myfi",
  		"body": [
    		"for ((i=${1:n1};i<${2:n2};i++)); do",
    		"    ${3:echo} \"${${i}}\"",
    		"done"
  		],
  		"description": "myForInt"
	},
	"myFunction": {
  		"prefix": "myfn",
  		"body": [
    		"_${1:functionName}() {",
    		"    ${2:body}",
    		"}"
  		],
  		"description": "myFunction"
	},
	"myIfStatement": {
		"prefix": "myi",
		"body": [
			"if [[ ${1:condition} ]]; then",
			"    ${2:command1}",
			"else",
			"    ${3:command2}",
			"fi"
		],
		"description": "myIfStatement"
	},
	"myMapfile": {
		"prefix": "mymap",
		"body":[
			"mapfile -t ${1:arrayName} < <(${2:command})"
		],
		"description": "myMapfile"
	},
	"myNestedFunction": {
		"prefix": "mynf",
		"body": [
			"__${1:nestedFunctionName}() (",
			"    ${2:command}",
			")"
		],
		"description": "myNestedFunction"
	},
	"myPrintf": {
  		"prefix": "mypf",
  		"body": [
  			"printf '%s\\n' \" ${1:string}\""
  		],
  		"description": "myPrintf"
	},
	"mySimpleTest": {
		"prefix": "myst",
		"body": [
			"[[ ${1:condition} ]] ${2:operator} ${3:command}"
		],
		"description": "mySimpleTest"
	},
	"myWhileRead": {
		"prefix": "mywr",
		"body": [
			"while read -r ${2:line}; do",
			"    ${3:command} \"$$2\"",
			"done < \"$${1:file}\""
		],
		"description": "myWhileRead"
	},
	"myWhileTrue": {
		"prefix": "mywt",
		"body": [
			"while true; do",
			"    ${1:command}",
			"done"
		],
		"description": "myWhileTrue"
	}
}
